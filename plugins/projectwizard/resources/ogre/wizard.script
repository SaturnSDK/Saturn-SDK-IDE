////////////////////////////////////////////////////////////////////////////////
//
// Ogre3D project wizard
//
// TODO: make it work with both available SDKs: MinGW & MSVS
//
////////////////////////////////////////////////////////////////////////////////

// globals
OgrePath <- _T("");

function BeginWizard()
{
    local intro_msg = _T("Welcome to the new OGRE project wizard!\n\n" +
                        "This wizard will guide you to create a new project\n" +
                        "using the OGRE 3D rendering engine.\n\n" +
                        "When you 're ready to proceed, please click \"Next\"...");

    local ogre_msg = _T("Please select the location of OGRE SDK on your computer.\n" +
                        "If you have setup an environment variable named\n" +
                        "OGRE_HOME, it 'll automatically be used below.");

	Wizard.AddIntroPage(intro_msg);
	Wizard.AddProjectPathPage();
    Wizard.AddGenericSelectPathPage(_T("OgrePath"), ogre_msg, _T("OGRE SDK location:"), _T("$(OGRE_HOME)"));
	Wizard.AddCompilerPage(_T(""), _T("*"), true, true);
}

////////////////////////////////////////////////////////////////////////////////
// OGRE's path page
////////////////////////////////////////////////////////////////////////////////

function OnLeave_OgrePath(fwd)
{
	if (fwd)
	{
	    local dir = Wizard.GetTextControlValue(_T("txtFolder"));
	    dir = ReplaceMacros(dir, true);
        if (!IO.FileExists(dir + _T("/include/OGRE.h")))
        {
            ShowError(_T("The path you entered seems valid, but this wizard " +
                    "can't locate OGRE's files in it..."));
            return false;
        }
        OgrePath = dir;
	}
	return true;
}

// return the files this project contains
function GetFilesDir()
{
    return _T("ogre/files");
}

// setup the already created project
function SetupProject(project)
{
    // set project options

    project.AddIncludeDir(OgrePath + _T("/include"));
    project.AddIncludeDir(OgrePath + _T("/samples/include"));
    project.AddIncludeDir(OgrePath + _T("/samples/refapp/include"));
    project.AddLibDir(OgrePath + _T("/lib"));

    if (PLATFORM == PLATFORM_MSW)
    {
        project.AddCompilerOption(_T("-DWIN32"));
        project.AddCompilerOption(_T("-D_WINDOWS"));
        project.AddLinkLib(_T("opengl32"));
        project.AddLinkLib(_T("gdi32"));
        project.AddLinkLib(_T("user32"));
        project.AddLinkLib(_T("kernel32"));
    }
    else
    {
        project.AddLinkLib(_T("GL"));
    }

    // enable compiler warnings (project-wide)
    WarningsOn(project, Wizard.GetCompilerID());
    // enable C++ exceptions (project-wide)
    CppExceptionsOn(project, Wizard.GetCompilerID());

    // Debug
    local target = project.GetBuildTarget(Wizard.GetDebugName());
    if (!IsNull(target))
    {
        target.SetTargetType(ttConsoleOnly); // ttConsoleOnly: console for debugging
        target.SetOutputFilename(Wizard.GetDebugOutputDir() + Wizard.GetProjectName() + DOT_EXT_EXECUTABLE);
        target.SetWorkingDir(OgrePath + _T("/bin/Debug"));

        if (PLATFORM == PLATFORM_MSW)
        {
            target.AddCompilerOption(_T("-D_DEBUG"));
            target.AddCompilerOption(_T("-D_STLP_DEBUG"));
            target.AddLinkLib(_T("stlportstlg.5.0.dll"));
        }
        target.AddLibDir(OgrePath + _T("/bin/Debug"));
        target.AddLinkLib(_T("OgreMain_d"));

        // enable generation of debugging symbols for target
        DebugSymbolsOn(target, Wizard.GetCompilerID());
    }

    // Release
    target = project.GetBuildTarget(Wizard.GetReleaseName());
    if (!IsNull(target))
    {
        target.SetTargetType(ttExecutable); // ttExecutable: no console
        target.SetOutputFilename(Wizard.GetReleaseOutputDir() + Wizard.GetProjectName() + DOT_EXT_EXECUTABLE);
        target.SetWorkingDir(OgrePath + _T("/bin/Release"));

        if (PLATFORM == PLATFORM_MSW)
        {
            target.AddCompilerOption(_T("-DNDEBUG"));
            target.AddLinkLib(_T("stlport.5.0.dll"));
        }
        target.AddLibDir(OgrePath + _T("/bin/Release"));
        target.AddLinkLib(_T("OgreMain"));

        // enable optimizations for target
        OptimizationsOn(target, Wizard.GetCompilerID());
    }
    return true;
}
