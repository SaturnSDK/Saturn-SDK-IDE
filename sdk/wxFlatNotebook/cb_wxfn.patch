--- wxFlatNotebook-old.cpp	Wed Jan 11 21:39:06 2006
+++ wxFlatNotebook.cpp	Thu Jan 12 13:30:32 2006
@@ -10,7 +10,7 @@
 // Licence:     wxWindows license <http://www.wxwidgets.org/licence3.txt>
 ///////////////////////////////////////////////////////////////////////////////
 
-#include <wx/wxFlatNotebook/wxFlatNotebook.h>
+#include "wxFlatNotebook.h"
 #include <algorithm>
 #include <wx/tooltip.h>
 #include <wx/tipwin.h>
@@ -30,9 +30,9 @@
 END_EVENT_TABLE()
 
 wxFlatNotebook::wxFlatNotebook(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style, const wxString& name)
-: m_nFrom(0)
+: m_bForceSelection(false)
+, m_nFrom(0)
 , m_nPadding(4)
-, m_bForceSelection(false)
 {
 	long panelStyle = wxTAB_TRAVERSAL;
 	if(style & wxFNB_BORDER)
@@ -250,11 +250,13 @@
 	m_pages->DoSetSelection(page);
 }
 
-void wxFlatNotebook::DeletePage(size_t page)
+void wxFlatNotebook::DeletePage(size_t page, bool notify)
 {
 	if(page >= m_windows.size())
 		return;
 
+    if (notify)
+    {
 	// Fire a closing event
 	wxFlatNotebookEvent event(wxEVT_COMMAND_FLATNOTEBOOK_PAGE_CLOSING, GetId());
 	event.SetSelection((int)page);
@@ -264,6 +266,7 @@
 	// The event handler allows it?
 	if (!event.IsAllowed())
 		return;
+    }
 
 	Freeze();
 
@@ -426,11 +429,13 @@
 	return m_pages->m_nStyle;
 }
 
-bool wxFlatNotebook::RemovePage(size_t page)
+bool wxFlatNotebook::RemovePage(size_t page, bool notify)
 {
 	if(page >= m_windows.size())
 		return false;
 
+    if (notify)
+    {
 	// Fire a closing event
 	wxFlatNotebookEvent event(wxEVT_COMMAND_FLATNOTEBOOK_PAGE_CLOSING, GetId());
 	event.SetSelection((int)page);
@@ -440,6 +445,7 @@
 	// The event handler allows it?
 	if (!event.IsAllowed())
 		return false;
+    }
 
 	Freeze();
 
@@ -543,12 +549,12 @@
 wxPageContainer::wxPageContainer(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style)
 : m_ImageList(NULL) 
 , m_iActivePage(-1)
+, m_bHoverX(false)
 , m_bHoverLeftArrow(false)
 , m_bHoverRightArrow(false)
-, m_bHoverX(false)
+, m_pDropTarget(NULL)
 , m_pParent(parent)
 , m_pRightClickMenu(NULL)
-, m_pDropTarget(NULL)
 {
 	m_colorTo = wxColor(255, 255, 255);
 	m_colorFrom   = wxColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));
@@ -890,7 +896,9 @@
 	{
 		m_iActivePage = (int)m_pagesInfoVec.size();
 	}
-	m_pagesInfoVec.push_back(wxPageInfo(caption, imgindex));
+	wxPageInfo pg(caption, imgindex);
+	pg.SetPosition(wxPoint(1,1));
+	m_pagesInfoVec.push_back(pg);
 	Refresh();
 }
 
@@ -900,8 +908,10 @@
 	{
 		m_iActivePage = (int)m_pagesInfoVec.size();
 	}
+	wxPageInfo pg(text, imgindex);
+	pg.SetPosition(wxPoint(1,1));
 	std::vector<wxPageInfo>::iterator iter = m_pagesInfoVec.begin() + index;
-	m_pagesInfoVec.insert(iter, wxPageInfo(text, imgindex));
+	m_pagesInfoVec.insert(iter, pg);
 	Refresh();
 	return true;
 }
@@ -924,9 +934,16 @@
 	{
 	case wxFNB_TAB:
 		{
+			wxFlatNotebookEvent event(wxEVT_COMMAND_FLATNOTEBOOK_PAGE_CLOSING, GetParent()->GetId());
+			event.SetSelection(tabIdx);
+			event.SetEventObject(GetParent());
+			GetParent()->GetEventHandler()->ProcessEvent(event);
+			if (event.IsAllowed())
+			{
 			// Set the current tab to be active
 			SetSelection((size_t)tabIdx);
-			DeletePage((size_t)tabIdx);
+                DeletePage((size_t)tabIdx, false);
+			}
 			break;
 		}
 	default:
@@ -937,8 +954,6 @@
 
 void wxPageContainer::OnRightDown(wxMouseEvent& event)
 {
-	if(m_pRightClickMenu)
-	{
 		wxPageInfo pgInfo;
 		int tabIdx;
 		int where = HitTest(event.GetPosition(), pgInfo, tabIdx);
@@ -970,7 +985,6 @@
 		default:
 			break;
 		}
-	}
 	event.Skip();
 }
 
@@ -1048,7 +1062,8 @@
 			event.SetSelection(m_iActivePage);
 			event.SetEventObject(GetParent());
 			GetParent()->GetEventHandler()->ProcessEvent(event);
-			DeletePage((size_t)m_iActivePage);
+			if (event.IsAllowed())
+                DeletePage((size_t)m_iActivePage, false);
 			break;
 		}
 	}
@@ -1150,10 +1165,10 @@
 	}
 }
 
-void wxPageContainer::DeletePage(size_t page)
+void wxPageContainer::DeletePage(size_t page, bool notify)
 {
 	wxFlatNotebook* book = (wxFlatNotebook*)GetParent();
-	book->DeletePage(page);
+	book->DeletePage(page, notify);
 	book->Refresh();
 }
 
@@ -1667,7 +1682,7 @@
 			}
 		}
 	}
-	else
+	else if (m_nStyle & wxFNB_ALLOW_FOREIGN_DND)
 	{
 #if defined(__WXMSW__) || defined(__WXGTK__)
 		if(nTabPage >= 0)
--- wxFlatNotebook-old.h	Wed Jan 11 21:39:06 2006
+++ wxFlatNotebook.h	Thu Jan 12 13:28:41 2006
@@ -33,7 +33,7 @@
 #include <wx/dnd.h>
 
 //#include "textdroptarget.h"
-#include <wx/wxFlatNotebook/wxFNBDropTarget.h>
+#include "wxFNBDropTarget.h"
 class wxPageContainer;
 
 #ifndef M_PI
@@ -69,6 +69,9 @@
 /// at top
 #define wxFNB_BOTTOM					64
 
+/// Allow drag'n'drop between different wxFlatNotebooks
+#define wxFNB_ALLOW_FOREIGN_DND			128
+
 class wxMenu;
 
 /**
@@ -129,7 +132,7 @@
 	/** 	
 	\param page - index of page to be deleted
 	*/
-	void DeletePage(size_t page);
+	void DeletePage(size_t page, bool notify = true);
 
 	/// Deletes all notebook pages and destroys all windows associated with pages
 	bool DeleteAllPages();
@@ -185,7 +188,7 @@
 	/** 	
 	\param page - page index to be removed
 	*/
-	bool RemovePage(size_t page);
+	bool RemovePage(size_t page, bool notify = true);
 
 	/// Sets the amount of space around each page's icon and label, in pixels.
 	/** 	
@@ -526,7 +529,7 @@
 	virtual void ShowTabTooltip(int tabIdx);
 
 	/// A wrapper from calling the DoDeletePage()
-	void DeletePage(size_t page);
+	void DeletePage(size_t page, bool notify = true);
 
 	/// Remove all pages from the container (it also deletes them)
 	void DeleteAllPages();
