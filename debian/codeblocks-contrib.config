#! /bin/sh
set -e

# Sanitize environnement
LC_ALL=C
LANG=C

# Load debconf
. /usr/share/debconf/confmodule
db_version 2.0
db_capb backup multiselect

# List of plugins provided by the current version
PROVIDED_CONTRIB_PLUGINS="AutoVersioning;libAutoVersioning.so
BrowseTracker;libBrowseTracker.so
BYO Games;libbyogames.so
Cccc;libCccc.so
CppCheck;libCppCheck.so
Koders query;libcb_koders.so
Code snippets;libcodesnippets.so
Code statistics;libcodestat.so
Copy Strings to clipboard;libcopystrings.so
Cscope;libCscope.so
DoxyBlocks;libDoxyBlocks.so
DragScroll;libdragscroll.so
EditorConfig;libEditorConfig.so
EditorTweaks;libEditorTweaks.so
Environment variables;libenvvars.so
File Manager;libFileManager.so
Source Exporter;libexporter.so
Header Fixup;libheaderfixup.so
Help Plugin;libhelp_plugin.so
HexEditor;libHexEditor.so
IncrementalSearch;libIncrementalSearch.so
Keyboard shortcuts;libkeybinder.so
Library Finder;liblib_finder.so
NassiShneidermanPlugin;libNassiShneiderman.so
Code profiler;libProfiler.so
Regular expressions testbed;libRegExTestbed.so
Reopen last closed editor(s);libReopenEditor.so
Smartindent plugin for C/C++;libSmartIndentCpp.so
Smartindent plugin for Fortran;libSmartIndentFortran.so
Smartindent plugin for HDL;libSmartIndentHDL.so
Smartindent plugin for Lua;libSmartIndentLua.so
Smartindent plugin for Pascal;libSmartIndentPascal.so
Smartindent plugin for Python;libSmartIndentPython.so
Smartindent plugin for XML;libSmartIndentXML.so
Spellchecker Plugin;libSpellChecker.so
Symbol Table Plugin;libSymTab.so
ThreadSearch;libThreadSearch.so
Tools Plus;libToolsPlus.so
Valgrind;libValgrind.so
MouseSap;libMouseSap.so
ReopenEditor;libReopenEditor.so
wxSmith ;libwxsmith.so
wxSmith-Contrib Items;libwxsmithcontribitems.so
wxSmith-Aui;libwxSmithAui.so"

# List of provided contrib-plugins (PROVIDED_CONTRIB_PLUGINS)
PROVIDED_CONTRIB_PLUGINS="$(printf '%s\n' "$PROVIDED_CONTRIB_PLUGINS" | grep -v "^$" | sort -df | tr '\n' '#' | sed -e 's/# */#/g' -e 's/# *$//g')"

CONTRIB_PLUGINS=""
CONTRIB_PLUGINS_C=""
IFS='#'
for str in $PROVIDED_CONTRIB_PLUGINS ; do
    if [ "x$CONTRIB_PLUGINS" != "x" ]; then
        CONTRIB_PLUGINS=${CONTRIB_PLUGINS}", "
        CONTRIB_PLUGINS_C=${CONTRIB_PLUGINS_C}", "
    fi
    CONTRIB_PLUGINS=${CONTRIB_PLUGINS}"$(printf '%s\n' "$str"  | cut -d";" -f1)"
    CONTRIB_PLUGINS_C=${CONTRIB_PLUGINS_C}"$(printf '%s' "$str"  | cut -d";" -f2)"
done
IFS=' '

# set question to unseen, so it will asked again
#db_fset codeblocks-contrib/plugins_to_use seen false
# List of provided contrib-plugins (CONTRIB_PLUGINS)
db_subst codeblocks-contrib/plugins_to_use contrib-plugins "$CONTRIB_PLUGINS"
db_subst codeblocks-contrib/plugins_to_use contrib-plugins-c "$CONTRIB_PLUGINS_C"

STATE=1
while [ "$STATE" -ge 0 ]; do
    case "$STATE" in
    0)
        exit 1
        ;;
    1)
        db_input medium codeblocks-contrib/plugins_to_use || true
        ;;
    2)
        db_get codeblocks-contrib/plugins_to_use || RET=
        if expr ", $RET," : ".*, all,.*" >/dev/null 2>&1; then
            # When "All contrib plugins" is selected, other choices have to be dropped
            db_set codeblocks-contrib/plugins_to_use $CONTRIB_PLUGINS_C
            RET=$CONTRIB_PLUGINS_C
        fi
	    SELECTED_PLUGINS="$(echo $RET | sed -e 's/, / /g')"
        DE_SELECTED_PLUGINS="$(printf '%s\n' "$CONTRIB_PLUGINS_C"| grep -v "^$" | tr ',' ' '  | tr '\n' ' ')"
        for plugin in $SELECTED_PLUGINS ; do
            DE_SELECTED_PLUGINS="$(printf '%s\n' "$DE_SELECTED_PLUGINS"| sed -e 's/'$plugin'//')"
        done

        db_set codeblocks-contrib/plugins_not_to_use $DE_SELECTED_PLUGINS
        ;;
    *)
        break
        ;;
    esac
    if db_go; then
        STATE=$(($STATE + 1))
    else
        STATE=$(($STATE - 1))
    fi
done
