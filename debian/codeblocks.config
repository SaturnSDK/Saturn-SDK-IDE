#! /bin/sh
set -e

# Sanitize environnement
LC_ALL=C
LANG=C

# Load debconf
. /usr/share/debconf/confmodule
db_version 2.0
db_capb backup multiselect

# List of plugins provided by the current version
PROVIDED_PLUGINS="Abbreviations;libabbreviations.so
Source code formatter (AStyle);libastyle.so
Autosave;libautosave.so
Class wizard;libclasswizard.so
Code completion;libcodecompletion.so
Debugger;libdebugger.so
Files extension handler;libdefaultmimehandler.so
Occurrences Highlighter;liboccurrenceshighlighting.so
Open files list;libopenfileslist.so
Foreign projects importer;libprojectsimporter.so
Scripted wizard;libscriptedwizard.so
Todo List;libtodo.so"

# List of provided plugins (PROVIDED_PLUGINS)
PROVIDED_PLUGINS="$(printf '%s\n' "$PROVIDED_PLUGINS" | grep -v "^$" | sort -df | tr '\n' '#' | sed -e 's/# */#/g' -e 's/# *$//g')"

PLUGINS=""
PLUGINS_C=""
IFS='#'
for str in $PROVIDED_PLUGINS ; do
    if [ "x$PLUGINS" != "x" ]; then
        PLUGINS=${PLUGINS}", "
        PLUGINS_C=${PLUGINS_C}", "
    fi
    PLUGINS=${PLUGINS}"$(printf '%s\n' "$str"  | cut -d";" -f1)"
    PLUGINS_C=${PLUGINS_C}"$(printf '%s' "$str"  | cut -d";" -f2)"
done
IFS=' '

# check whether plugin list has changed, if yes, set question to unseen, so it will asked again
db_metaget codeblocks/plugins_to_use choices
KNOWN_PLUGINS=$RET

if [ "$KNOWN_PLUGINS" != "All plugins, $PLUGINS" ];then
    db_fset codeblocks/plugins_to_use seen false
fi

# List of provided plugins (PLUGINS)
db_subst codeblocks/plugins_to_use plugins "$PLUGINS"
db_subst codeblocks/plugins_to_use plugins-c "$PLUGINS_C"

STATE=1
while [ "$STATE" -ge 0 ]; do
    case "$STATE" in
    0)
        exit 1
        ;;
    1)
        db_input medium codeblocks/plugins_to_use || true
        ;;
    2)
        db_get codeblocks/plugins_to_use || RET=
        if expr ", $RET," : ".*, all,.*" >/dev/null 2>&1; then
            # When "All contrib plugins" is selected, other choices have to be dropped
            db_set codeblocks/plugins_to_use $PLUGINS_C
            RET=$PLUGINS_C
        fi
	    SELECTED_PLUGINS="$(echo $RET | sed -e 's/, / /g')"
        DE_SELECTED_PLUGINS="$(printf '%s\n' "$PLUGINS_C"| grep -v "^$" | tr ',' ' ' | tr '\n' ' ')"
        for plugin in $SELECTED_PLUGINS ; do
            DE_SELECTED_PLUGINS="$(printf '%s\n' "$DE_SELECTED_PLUGINS"| sed -e 's/'$plugin'//')"
        done

        db_set codeblocks/plugins_not_to_use $DE_SELECTED_PLUGINS
        ;;
    *)
        break
        ;;
    esac
    if db_go; then
        STATE=$(($STATE + 1))
    else
        STATE=$(($STATE - 1))
    fi
done
