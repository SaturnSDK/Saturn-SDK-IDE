////////////////////////////////////////////////////////////////////////////////
//
// Code::Blocks new file wizard script
//
// Project: C/C++ source file
// Author:  Yiannis Mandravellos
//
////////////////////////////////////////////////////////////////////////////////

// Strings that start with @ (like below) are so-called verbatim strings.
// These contain everything as typed. To write a double-quote inside verbatim string
// type two double-quotes ("")

function BeginWizard()
{
    // this is the text that will appear in the start (intro) page
    local intro_msg = _T("Welcome to the new C/C++ source file wizard!\n" +
                        "This wizard will guide you to create a new C/C++ source file.\n\n" +
                        "When you 're ready to proceed, please click \"Next\"...");

    // add builtin pages
	Wizard.AddIntroPage(intro_msg); // intro
	Wizard.AddLanguagePage(_T("C;C++"), 1); // select language
	Wizard.AddFilePathPage(false); // select filename (no header guard for source files)
}

function OnLeave_LanguagePage(fwd)
{
    if (fwd)
    {
        if (Wizard.GetLanguageIndex() == 0)
            Wizard.SetFilePathSelectionFilter(_T("C files (*.c;*.C)|*.c;*.C")); // C
        else
            Wizard.SetFilePathSelectionFilter(_T("C++ files (*.cpp;*.cxx;*.cc)|*.cpp;*.cxx;*.cc")); // C++
    }
    return true; // allow it
}

function CreateFiles()
{
    local fname = Wizard.GetFileName();
    local ed = GetEditorManager().New(fname);
    if (!IsNull(ed))
    {
        // succeeded
        // add file to project if needed
        if (Wizard.GetFileAddToProject())
        {
            local tgtidx = Wizard.GetFileTargetIndex();
            if (tgtidx != -1)
            {
                local prj = GetProjectManager().GetActiveProject();
                if (!IsNull(prj))
                {
                    prj.AddFile(tgtidx, fname);
                    GetProjectManager().RebuildTree(); // make sure our view is current
                }
            }
        }
    }
    return fname;
}
