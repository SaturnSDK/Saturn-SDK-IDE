<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxParentPropertyClass class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex">  <form class="search" action="search.php" method="get">
<a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a>  | <span class="search"><u>S</u>earch&nbsp;for&nbsp;<input class="search" type="text" name="query" value="" size="20" accesskey="s"/></span></form></div>
<h1>wxParentPropertyClass Class Reference</h1>This is a simple property which holds sub-properties.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;propdev.h&gt;</code>
<p>
<p>Inheritance diagram for wxParentPropertyClass:
<p><center><img src="classwxParentPropertyClass.png" usemap="#wxParentPropertyClass_map" border="0" alt=""></center>
<map name="wxParentPropertyClass_map">
<area href="classwxPGPropertyWithChildren.htm" alt="wxPGPropertyWithChildren" shape="rect" coords="0,56,165,80">
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="0,0,165,24">
</map>
<a href="classwxParentPropertyClass-members.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassw0" doxytag="wxParentPropertyClass::ClientDataType" ></a>
typedef void *&nbsp;</td><td class="memItemRight" valign=bottom><b>ClientDataType</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassw1" doxytag="wxParentPropertyClass::FlagType" ></a>
typedef short&nbsp;</td><td class="memItemRight" valign=bottom><b>FlagType</b></td></tr>

<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa0">AddChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa1">AddChild2</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop, int index=-1, bool correct_mode=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa0">AppendChoice</a> (const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa1">CanHaveExtraChildren</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxParentPropertyClass.htm#wxParentPropertyClassa4">ChildChanged</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa2" doxytag="wxParentPropertyClass::ClearFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ClearFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa3">DeleteChoice</a> (int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa4">DoGetEditorClass</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxValidator *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa5">DoGetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxPGVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxParentPropertyClass.htm#wxParentPropertyClassa9">DoGetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa7" doxytag="wxParentPropertyClass::DoSetName" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxParentPropertyClass.htm#wxParentPropertyClassa11">DoSetValue</a> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa13">Empty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa9">EnsureDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa15" doxytag="wxParentPropertyClass::FixIndexesOfChildren" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>FixIndexesOfChildren</b> (size_t starthere=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa10" doxytag="wxParentPropertyClass::GetArrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetArrIndex</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa11">GetAttributes</a> (unsigned int flagmask=0xFFFF)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa12">GetChildCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa13">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa14">GetClassInfo</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa15">GetClassName</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa16" doxytag="wxParentPropertyClass::GetClientData" ></a>
ClientDataType&nbsp;</td><td class="memItemRight" valign=bottom><b>GetClientData</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa23">GetCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa17">GetDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa18" doxytag="wxParentPropertyClass::GetDepth" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDepth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa19" doxytag="wxParentPropertyClass::GetDisplayedString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDisplayedString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa20" doxytag="wxParentPropertyClass::GetEditorClass" ></a>
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetEditorClass</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa21" doxytag="wxParentPropertyClass::GetFlags" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa22">GetGrid</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa23" doxytag="wxParentPropertyClass::GetHelpString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetHelpString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGId.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa24">GetId</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxSize&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa25">GetImageSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa26">GetIndexInParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa34" doxytag="wxParentPropertyClass::GetItemAtY" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetItemAtY</b> (unsigned int y, unsigned int lh)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa27">GetLabel</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa28">GetLastVisibleSubItem</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa29">GetMainParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa30" doxytag="wxParentPropertyClass::GetMaxLength" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetMaxLength</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa31">GetName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa32">GetParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>signed char&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa33">GetParentingType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa42">GetParentState</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa43">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa35">GetType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxValidator *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa36">GetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxParentPropertyClass.htm#wxParentPropertyClassa45">GetValueAsString</a> (int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa38">GetValueAsVariant</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa39" doxytag="wxParentPropertyClass::GetValueImage" ></a>
wxBitmap *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValueImage</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa40">GetValueType</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa41" doxytag="wxParentPropertyClass::GetValueTypePtr" ></a>
const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetValueTypePtr</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa42">GetY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa43" doxytag="wxParentPropertyClass::HasFlag" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>HasFlag</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa44">Hide</a> (bool hide)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa56">Index</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa45">Init</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa46">InsertChoice</a> (const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa47" doxytag="wxParentPropertyClass::IsEnabled" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsEnabled</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa60" doxytag="wxParentPropertyClass::IsExpanded" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsExpanded</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa48" doxytag="wxParentPropertyClass::IsFlagSet" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsFlagSet</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa49" doxytag="wxParentPropertyClass::IsKindOf" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsKindOf</b> (<a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> &amp;info)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa50">IsOk</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa51" doxytag="wxParentPropertyClass::IsSomeParent" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa52">IsSubProperty</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa53" doxytag="wxParentPropertyClass::IsValueUnspecified" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsValueUnspecified</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa67">Item</a> (size_t i) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa68">Last</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa54">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa55">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa71" doxytag="wxParentPropertyClass::PrepareSubProperties" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>PrepareSubProperties</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa56">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa57">RecreateEditor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa74">RefreshChildren</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa58" doxytag="wxParentPropertyClass::SetAttrib" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetAttrib</b> (int id, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa76">SetAttribute</a> (int id, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa60">SetAttributes</a> (const wxString &amp;attributes)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa61">SetChoices</a> (const wxArrayString &amp;labels, const wxArrayInt &amp;values=(*((wxArrayInt *) NULL)))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa62">SetChoices</a> (<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa63">SetChoiceSelection</a> (int newValue, const wxPGChoiceInfo &amp;choiceInfo)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa64">SetChoicesExclusive</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa65">SetClientData</a> (ClientDataType clientData)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa66">SetEditor</a> (const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa67">SetEditor</a> (const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa68" doxytag="wxParentPropertyClass::SetFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa69" doxytag="wxParentPropertyClass::SetHelpString" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetHelpString</b> (const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa70" doxytag="wxParentPropertyClass::SetLabel" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetLabel</b> (const wxString &amp;label)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa71">SetMaxLength</a> (int maxLen)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa89" doxytag="wxParentPropertyClass::SetParentState" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetParentState</b> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pstate)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa72">SetValidator</a> (const wxValidator &amp;validator)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa73">SetValueFromInt</a> (long value, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa93">SetValueFromString</a> (const wxString &amp;text, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa75">SetValueImage</a> (wxBitmap &amp;bmp)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa76" doxytag="wxParentPropertyClass::SetValueToUnspecified" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetValueToUnspecified</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa77" doxytag="wxParentPropertyClass::ShowError" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ShowError</b> (const wxString &amp;msg)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa78" doxytag="wxParentPropertyClass::StdValidationProcedure" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>StdValidationProcedure</b> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa98" doxytag="wxParentPropertyClass::SubPropsChanged" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SubPropsChanged</b> (int oldSelInd=-1)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassa79" doxytag="wxParentPropertyClass::UpdateControl" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>UpdateControl</b> (wxWindow *primary)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa80">UsesAutoUnspecified</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxParentPropertyClassa97" doxytag="wxParentPropertyClass::wxParentPropertyClass" ></a>
&nbsp;</td><td class="memItemRight" valign=bottom><b>wxParentPropertyClass</b> (const wxString &amp;label, const wxString &amp;name=wxPG_LABEL)</td></tr>

<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassb0" doxytag="wxParentPropertyClass::Init" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>Init</b> ()</td></tr>

<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp0" doxytag="wxParentPropertyClass::m_arrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp1" doxytag="wxParentPropertyClass::m_bgColIndex" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp3" doxytag="wxParentPropertyClass::m_children" ></a>
wxPGArrayProperty&nbsp;</td><td class="memItemRight" valign=bottom><b>m_children</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp2" doxytag="wxParentPropertyClass::m_clientData" ></a>
ClientDataType&nbsp;</td><td class="memItemRight" valign=bottom><b>m_clientData</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp3" doxytag="wxParentPropertyClass::m_dataExt" ></a>
<a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_dataExt</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp4" doxytag="wxParentPropertyClass::m_depth" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp5" doxytag="wxParentPropertyClass::m_depthBgCol" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp8" doxytag="wxParentPropertyClass::m_expanded" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_expanded</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp6" doxytag="wxParentPropertyClass::m_fgColIndex" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_fgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp7" doxytag="wxParentPropertyClass::m_flags" ></a>
FlagType&nbsp;</td><td class="memItemRight" valign=bottom><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp8" doxytag="wxParentPropertyClass::m_label" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp9" doxytag="wxParentPropertyClass::m_maxLen" ></a>
short&nbsp;</td><td class="memItemRight" valign=bottom><b>m_maxLen</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp10" doxytag="wxParentPropertyClass::m_name" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp11" doxytag="wxParentPropertyClass::m_parent" ></a>
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp12" doxytag="wxParentPropertyClass::m_parentingType" ></a>
signed char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parentingType</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp16" doxytag="wxParentPropertyClass::m_parentState" ></a>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parentState</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxParentPropertyClassp16" doxytag="wxParentPropertyClass::m_string" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_string</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxStringPropertyClassp14" doxytag="wxParentPropertyClass::m_y" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_y</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This is a simple property which holds sub-properties. 
<p>
Has default editing textctrl based editing capability. In essence, it is a category that has look and feel of a property, and which children can be edited via the textctrl. 
<p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="wxPropertyCategoryClassa0" doxytag="wxParentPropertyClass::AddChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::AddChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>prop</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is used by properties that have fixed sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa1" doxytag="wxParentPropertyClass::AddChild2" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::AddChild2 </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>prop</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em> = -1, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>correct_mode</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is used by Insert etc. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa0" doxytag="wxParentPropertyClass::AppendChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::AppendChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa1" doxytag="wxParentPropertyClass::CanHaveExtraChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::CanHaveExtraChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is wxPropertyCategory or wxCustomProperty)     </td>
  </tr>
</table>
<a class="anchor" name="wxParentPropertyClassa4" doxytag="wxParentPropertyClass::ChildChanged" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxParentPropertyClass::ChildChanged </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>p</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Called after child property p has been altered. 
<p>
The value of this parent property should now be updated accordingly. 
<p>
Reimplemented from <a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa5">wxPGPropertyWithChildren</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa3" doxytag="wxParentPropertyClass::DeleteChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::DeleteChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>index</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Removes entry from property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
If selected item is deleted, then the value is set to unspecified.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa4" doxytag="wxParentPropertyClass::DoGetEditorClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::DoGetEditorClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to an instance of editor class. 
<p>

<p>
Reimplemented in <a class="el" href="classwxPGRootPropertyClass.htm#wxPGRootPropertyClassa7">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#wxPropertyCategoryClassa8">wxPropertyCategoryClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa5" doxytag="wxParentPropertyClass::DoGetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxValidator* wxPGProperty::DoGetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator). 
<p>
Setting validator explicitly via SetPropertyValidator will override this.<p>
In most situations, code like this should work well (macros are used to maintain one actual validator instance, so on the second call the function exits within the first macro):<p>
<pre class="fragment"><div>        wxValidator* wxMyPropertyClass::DoGetValidator ()<span class="keyword"> const</span>
<span class="keyword">        </span>{
            WX_PG_DOGETVALIDATOR_ENTRY()

            wxMyValidator* validator = <span class="keyword">new</span> wxMyValidator(...);

            ... prepare validator...

            WX_PG_DOGETVALIDATOR_EXIT(validator)
        }
</div></pre><p>
<dl compact><dt><b>Remarks:</b></dt><dd>You can get common filename validator by returning wxFilePropertyClass::GetClassValidator(). wxDirProperty, for example, uses it. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxParentPropertyClassa9" doxytag="wxParentPropertyClass::DoGetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxPGVariant wxParentPropertyClass::DoGetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns properly constructed wxPGVariant. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa10">wxPGProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxParentPropertyClassa11" doxytag="wxParentPropertyClass::DoSetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxParentPropertyClass::DoSetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGVariant&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>value</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property's internal value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Simple container with GetString(), GetLong() etc. methods. Currently recommended means to extract value is to use wxPGVariantToXXX(value) macro. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>Example pseudo-implementation with comments: <pre class="fragment"><div>        <span class="keywordtype">void</span> wxMyProperty::DoSetValue ( wxPGVariant value )
        {
            <span class="comment">// A) Get value. For example</span>
            <span class="keyword">const</span> wxMyValueType* pvalue = wxPGVariantToWxObjectPtr(value,wxMyValueType);
            <span class="comment">//    or:</span>
            <span class="keyword">const</span> wxString&amp; str = wxPGVariantToString(value);
            <span class="comment">//    or:</span>
            <span class="keywordtype">long</span> val = wxPGVariantToLong(value);

            <span class="comment">// B) If value is wxObject or void based with NULL default, then handle that:</span>
            <span class="keywordflow">if</span> ( pvalue )
                m_value = *pvalue;
            <span class="keywordflow">else</span>
                pmyvalue-&gt;SetToDefault();

            <span class="comment">// Otherwise</span>
            <span class="comment">// m_value = *pvalue;</span>
            <span class="comment">// is sufficient.</span>

            <span class="comment">// C) If has children, this should be here (before displaying in control).</span>
            RefreshChildren();

        }
</div></pre></dd></dl>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa12">wxPGProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa13" doxytag="wxParentPropertyClass::Empty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGPropertyWithChildren::Empty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes all sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa9" doxytag="wxParentPropertyClass::EnsureDataExt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::EnsureDataExt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property did not have data extension, one is created now (returns true in that case). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa11" doxytag="wxParentPropertyClass::GetAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPGProperty::GetAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">unsigned int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flagmask</em> = 0xFFFF          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns comma-delimited string of property attributes. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa12" doxytag="wxParentPropertyClass::GetChildCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGProperty::GetChildCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of children (always 0 for normal properties). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa13" doxytag="wxParentPropertyClass::GetChoiceInfo" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual int wxPGProperty::GetChoiceInfo </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGChoiceInfo *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>choiceinfo</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns -1 in choiceinfo-&gt;m_itemCount, then in that case this class be derived from wxBaseEnumPropertyClass (see <a class="el" href="propdev_8h.htm">propdev.h</a>) and GetEntry is used to fill an array (slower, but handier if you don't store your labels as arrays of strings).</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa18">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa14" doxytag="wxParentPropertyClass::GetClassInfo" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a>* wxPGProperty::GetClassInfo </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [pure virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns classinfo of the property class. 
<p>

<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#wxPGRootPropertyClassa19">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#wxPropertyCategoryClassa20">wxPropertyCategoryClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa15" doxytag="wxParentPropertyClass::GetClassName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const wxChar* wxPGProperty::GetClassName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [pure virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns classname (for example, "wxStringProperty" for wxStringProperty) of a property class. 
<p>

<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#wxPGRootPropertyClassa20">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#wxPropertyCategoryClassa21">wxPropertyCategoryClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa23" doxytag="wxParentPropertyClass::GetCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGPropertyWithChildren::GetCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa17" doxytag="wxParentPropertyClass::GetDataExt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a>* wxPGProperty::GetDataExt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's data extension (NULL if none). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa22" doxytag="wxParentPropertyClass::GetGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property grid where property lies. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa24" doxytag="wxParentPropertyClass::GetId" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGId.htm">wxPGId</a> wxPGProperty::GetId </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property id. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa25" doxytag="wxParentPropertyClass::GetImageSize" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxSize wxPGProperty::GetImageSize </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns size of the custom painted image in front of property. 
<p>
This method must be overridden to return non-default value if OnCustomPaint is to be called. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If flexible image size is desired, return <a class="el" href="group__miscellaneous.htm#ga9">wxPG_FLEXIBLE_SIZE(wid,hei)</a>. OnCustomPaint is then called to measure items as well (see for <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa54">wxPGProperty::OnCustomPaint</a> for measure call specs).</li><li>If entire property, including text, is to be custom painted, then <a class="el" href="group__miscellaneous.htm#ga11">wxPG_FULL_CUSTOM_PAINT_SIZE(hei)</a> or <a class="el" href="group__miscellaneous.htm#ga12">wxPG_FULL_CUSTOM_PAINT_FLEXIBLE_SIZE(hei)</a> is to be returned.</li><li>Default behaviour is to return wxSize(0,0), which means no image.</li><li>Default image width or height is indicated with dimension -1. </li></ul>
</dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa31">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa26" doxytag="wxParentPropertyClass::GetIndexInParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> unsigned int wxPGProperty::GetIndexInParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns position in parent's array. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa27" doxytag="wxParentPropertyClass::GetLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's label. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa28" doxytag="wxParentPropertyClass::GetLastVisibleSubItem" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetLastVisibleSubItem </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns last visible sub-property, recursively. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa29" doxytag="wxParentPropertyClass::GetMainParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetMainParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns highest level non-category, non-root parent. 
<p>
Useful when you have nested wxCustomProperties/wxParentProperties. <dl compact><dt><b>Remarks:</b></dt><dd>Thus, if immediate parent is root or category, this will return the property itself. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa31" doxytag="wxParentPropertyClass::GetName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's name (alternate way to access property). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa32" doxytag="wxParentPropertyClass::GetParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPGProperty::GetParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return parent of property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa33" doxytag="wxParentPropertyClass::GetParentingType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> signed char wxPGProperty::GetParentingType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns 0 for normal items. 
<p>
1 for categories, -1 for other properties with children, -2 for wxCustomProperty (mostly like -1 ones but with few expections). <dl compact><dt><b>Remarks:</b></dt><dd>Should not be overridden by new custom properties. Usually only used internally. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa42" doxytag="wxParentPropertyClass::GetParentState" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPGPropertyWithChildren::GetParentState </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> to which this property belongs. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa34">wxPGProperty</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa43" doxytag="wxParentPropertyClass::GetPropertyByName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::GetPropertyByName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns (direct) child property with given name (or NULL if not found). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa35" doxytag="wxParentPropertyClass::GetType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxChar* wxPGProperty::GetType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa36" doxytag="wxParentPropertyClass::GetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxValidator* wxPGProperty::GetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets assignable version of property's validator. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxParentPropertyClassa45" doxytag="wxParentPropertyClass::GetValueAsString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxString wxParentPropertyClass::GetValueAsString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>argFlags</em> = 0          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Advanced variant of <a class="el" href="classwxParentPropertyClass.htm#wxParentPropertyClassa45">GetValueAsString()</a> that forms a string that contains sequence of text representations of sub-properties. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGPropertyWithChildren.htm#wxPGRootPropertyClassa45">wxPGPropertyWithChildren</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa38" doxytag="wxParentPropertyClass::GetValueAsVariant" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPGProperty::GetValueAsVariant </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value as wxVariant. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa40" doxytag="wxParentPropertyClass::GetValueType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a>* wxPGProperty::GetValueType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [pure virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to the object that has methods related to the value type of this property. 
<p>
Keep atleast this method abstract so the class is kept abstract. 
<p>
Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#wxPGRootPropertyClassa48">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#wxPropertyCategoryClassa51">wxPropertyCategoryClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa42" doxytag="wxParentPropertyClass::GetY" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::GetY </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets pre-calculated top y coordinate of property graphics. 
<p>
This cannot be relied on all times (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> knows when :) ), and value is -1 if property is not visible.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa44" doxytag="wxParentPropertyClass::Hide" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::Hide </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>hide</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Hides or reveals the property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>hide</em>&nbsp;</td><td>true for hide, false for reveal. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa56" doxytag="wxParentPropertyClass::Index" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGPropertyWithChildren::Index </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>p</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns index of given sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa45" doxytag="wxParentPropertyClass::Init" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::Init </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initializes the property. 
<p>
Usually only called in the constructor.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa46" doxytag="wxParentPropertyClass::InsertChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::InsertChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa50" doxytag="wxParentPropertyClass::IsOk" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsOk </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is valid and <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> methods can operate on it safely. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa52" doxytag="wxParentPropertyClass::IsSubProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsSubProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if this is a sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa67" doxytag="wxParentPropertyClass::Item" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Item </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">size_t&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>i</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns sub-property at index i. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa68" doxytag="wxParentPropertyClass::Last" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGPropertyWithChildren::Last </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns last sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa54" doxytag="wxParentPropertyClass::OnCustomPaint" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::OnCustomPaint </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxDC &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxRect &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>paintdata</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa25">wxPGProperty::GetImageSize</a> is overridden as well). 
<p>
If property's <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa25">GetImageSize()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa25">GetImageSize()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa25">GetImageSize()</a> returns a "flexible" height ( using <a class="el" href="group__miscellaneous.htm#ga9">wxPG_FLEXIBLE_SIZE(W,H)</a> macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign=top><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign=top><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Changing font and text colour affects the text drawn next to the painted image (which is done immediately after the OnCustomPaint call finishes).</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#wxPGPropertya37"></a> </dd></dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa66">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa55" doxytag="wxParentPropertyClass::OnEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::OnEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxEvent &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>event</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, wxSystemColourProperty custom handles wxEVT_COMMAND_CHOICE_SELECTED). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. This is case, for example, when enter is pressed in wxTextCtrl. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa56" doxytag="wxParentPropertyClass::PrepareValueForDialogEditing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::PrepareValueForDialogEditing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>propgrid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <pre class="fragment"><div>            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 GetEditorClass()-&gt;<a class="code" href="classwxPGEditor.htm#wxPGEditora1">CopyValueFromControl</a>( <span class="keyword">this</span>, primary );
</div></pre>in <a class="el" href="classwxPGProperty.htm#wxStringPropertyClassa55">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa57" doxytag="wxParentPropertyClass::RecreateEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::RecreateEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property's editor is created this forces its recreation. 
<p>
Useful in SetAttribute etc. Returns true if actually did anything.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa74" doxytag="wxParentPropertyClass::RefreshChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGPropertyWithChildren::RefreshChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Refresh values of child properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa76" doxytag="wxParentPropertyClass::SetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::SetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets an attribute of this property. 
<p>
This is quite property class specific, and there are no common attributes. Note that attribute may be specific to a property instance, or it may affect all properties of its class. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Identifier of attribute </td></tr>
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Value for that attribute. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa73">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa60" doxytag="wxParentPropertyClass::SetAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>attributes</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets attributes from a comma-delimited string. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa61" doxytag="wxParentPropertyClass::SetChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>labels</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayInt &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>values</em> = (*((wxArrayInt *) NULL))</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets new set of choices for property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa62" doxytag="wxParentPropertyClass::SetChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>choices</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets new set of choices for property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa63" doxytag="wxParentPropertyClass::SetChoiceSelection" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetChoiceSelection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>newValue</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPGChoiceInfo &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>choiceInfo</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes value of a property with choices, but only works if the value type is long or string. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa64" doxytag="wxParentPropertyClass::SetChoicesExclusive" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetChoicesExclusive </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property has choices and they are not yet exclusive, new such copy of them will be created. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa65" doxytag="wxParentPropertyClass::SetClientData" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetClientData </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">ClientDataType&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>clientData</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets client data (void*) of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa66" doxytag="wxParentPropertyClass::SetEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>editorName</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa67" doxytag="wxParentPropertyClass::SetEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>editor</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa71" doxytag="wxParentPropertyClass::SetMaxLength" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::SetMaxLength </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>maxLen</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set max length of text editor. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa72" doxytag="wxParentPropertyClass::SetValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxValidator &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>validator</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets wxValidator for a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa73" doxytag="wxParentPropertyClass::SetValueFromInt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::SetValueFromInt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">long&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa12">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa88">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa93" doxytag="wxParentPropertyClass::SetValueFromString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGPropertyWithChildren::SetValueFromString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This overridden version converts comma or semicolon separated tokens into child values. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPGProperty.htm#wxPGPropertya74">wxPGProperty</a>.
<p>
Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#wxCustomPropertyClassa89">wxCustomPropertyClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa75" doxytag="wxParentPropertyClass::SetValueImage" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetValueImage </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxBitmap &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>bmp</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set wxBitmap in front of the value. 
<p>
This bitmap will be ignored if property class has implemented OnCustomPaint.     </td>
  </tr>
</table>
<a class="anchor" name="wxStringPropertyClassa80" doxytag="wxParentPropertyClass::UsesAutoUnspecified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::UsesAutoUnspecified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if containing grid uses wxPG_EX_AUTO_UNSPECIFIED_VALUES. 
<p>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propdev.h</ul>
<hr size="1"><address style="align: right;"><small>Generated on Mon Oct 29 16:56:23 2007 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
