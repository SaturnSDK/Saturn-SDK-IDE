<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>wxPropertyGrid: wxPGProperty Class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxPGProperty Class Reference</h1><!-- doxytag: class="wxPGProperty" --><code>#include &lt;propgrid.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for wxPGProperty:</div>
<div class="dynsection">

<p><center><img src="classwxPGProperty.png" usemap="#wxPGProperty_map" border="0" alt=""></center>
<map name="wxPGProperty_map">
<area href="classwxPGPropertyWithChildren.htm" alt="wxPGPropertyWithChildren" shape="rect" coords="262,56,427,80">
<area href="classwxCustomPropertyClass.htm" alt="wxCustomPropertyClass" shape="rect" coords="0,112,165,136">
<area href="classwxParentPropertyClass.htm" alt="wxParentPropertyClass" shape="rect" coords="175,112,340,136">
<area href="classwxPGRootPropertyClass.htm" alt="wxPGRootPropertyClass" shape="rect" coords="350,112,515,136">
<area href="classwxPropertyCategoryClass.htm" alt="wxPropertyCategoryClass" shape="rect" coords="525,112,690,136">
</map>
</div>

<p>
<a href="classwxPGProperty-members.htm">List of all members.</a><hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classwxPGProperty.htm" title="wxPGProperty, alias wxBasePropertyClass, is base class for properties.">wxPGProperty</a>, alias wxBasePropertyClass, is base class for properties. 
<p>
Information here is provided primarily for anyone who creates new properties, since <b>all operations on properties should be done via wxPropertyGrid's or wxPropertyGridManager's methods</b>.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>When changing name of a property, it is essential to use <a class="el" href="classwxPropertyGrid.htm#280472021c791e16044e4998ae1944d4" title="Sets name of a property.">wxPropertyGrid::SetPropertyName</a> (that's why there is no SetName method). </li></ul>
</dd></dl>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d96bea693e87979d271a15dbe5f085fd"></a><!-- doxytag: member="wxPGProperty::ClientDataType" ref="d96bea693e87979d271a15dbe5f085fd" args="" -->
typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClientDataType</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="283919c0d6e165070ce1b9c7a6f12e1f"></a><!-- doxytag: member="wxPGProperty::FlagType" ref="283919c0d6e165070ce1b9c7a6f12e1f" args="" -->
typedef short&nbsp;</td><td class="memItemRight" valign="bottom"><b>FlagType</b></td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f823df743b115386be4d3e7f1412afb1">AppendChoice</a> (const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#61e04603ffafaa3a1216efd90f0c444d">CanHaveExtraChildren</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2268814902bae1eb9e593c5e127001cb"></a><!-- doxytag: member="wxPGProperty::ClearFlag" ref="2268814902bae1eb9e593c5e127001cb" args="(FlagType flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClearFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#137f1b7ea16f1f18fcc3e50ec107da1f">DeleteChoice</a> (int index)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2a890026b842c51658e8c358e137722d">DoGetEditorClass</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f1b9f11eab24b1c1331f3f4a663ff98e">DoGetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxPGVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6244dc55ee2e62fc47df807ed0c59436">DoGetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488">DoSetValue</a> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a364ea566779dba19d54b6988bf2077b">EnsureDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="779abfbac2a20616a3d6a99f4be5bf06"></a><!-- doxytag: member="wxPGProperty::GetArrIndex" ref="779abfbac2a20616a3d6a99f4be5bf06" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetArrIndex</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bc12babaa354fe4ce0fb49af270bba8e">GetAttributes</a> (unsigned int flagmask=0xFFFF)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f6d4c36f0c810ddc16f0b5609be2fde1">GetChildCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#805b98f7d147782079bb9a48915a949f">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <br>
<a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#e0b3f620d8fb3f543b8915218f46ce46">GetClassInfo</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9479934a63b46a6764f174169839a6d5">GetClassName</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c3cbc5740e796b16ec9b0106592625d1"></a><!-- doxytag: member="wxPGProperty::GetClientData" ref="c3cbc5740e796b16ec9b0106592625d1" args="() const " -->
ClientDataType&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetClientData</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6e5e5452bc05eeed910725478f2738a5">GetDataExt</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fc4727eecd9a28a4f7a5361dbc1e5e76"></a><!-- doxytag: member="wxPGProperty::GetDisplayedString" ref="fc4727eecd9a28a4f7a5361dbc1e5e76" args="() const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDisplayedString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2f15b192dc294f8a66f2584d8bf0974f"></a><!-- doxytag: member="wxPGProperty::GetEditorClass" ref="2f15b192dc294f8a66f2584d8bf0974f" args="() const " -->
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetEditorClass</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="43612c7992eb7c4851751bf8b0a881ce"></a><!-- doxytag: member="wxPGProperty::GetFlags" ref="43612c7992eb7c4851751bf8b0a881ce" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#921b49bc576e83b6cb900ade60f3787a">GetGrid</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0fba82ed12f7f6079a0f213f7a2fa7c5"></a><!-- doxytag: member="wxPGProperty::GetHelpString" ref="0fba82ed12f7f6079a0f213f7a2fa7c5" args="() const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetHelpString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGId.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#af3cbf9dbc89396c4a00c50da365400f">GetId</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b">GetImageSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ef71581ec3dcd1e17457457def9f9d24">GetIndexInParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7610de7df326219f954133b2460f7bd9">GetLabel</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ef439150fcdfcc32bebedb278aea9806">GetLastVisibleSubItem</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#50aa7238a183862723e1505d5cffc341">GetMainParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="78a3bf23304ec8a483c75fac5002986e"></a><!-- doxytag: member="wxPGProperty::GetMaxLength" ref="78a3bf23304ec8a483c75fac5002986e" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetMaxLength</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#cc8d2a997f98e58813f6bd1af670ea13">GetName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#cd2f5a538affea4c48c75244e292dea5">GetParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">signed char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f9c233225fe976b66c05a27ebeef0314">GetParentingType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#b524de560219c9be11b1b30b3c435156">GetParentState</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d37c4018adffa1b5191f740b8beca9d6">GetType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#79cb24032f2aaee16a260ca560957a6f">GetValidator</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">GetValueAsString</a> (int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a4dc9b698a65205adf6ef4cb165de5ce">GetValueAsVariant</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2565aba121d1df376d7ba7c16fbc0553"></a><!-- doxytag: member="wxPGProperty::GetValueImage" ref="2565aba121d1df376d7ba7c16fbc0553" args="() const " -->
wxBitmap *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueImage</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5393b0685a8d8483c1a2147c7ee02ed5">GetValueType</a> () const =0</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="71ce45f2c67990932d9351a022aafc6e"></a><!-- doxytag: member="wxPGProperty::GetValueTypePtr" ref="71ce45f2c67990932d9351a022aafc6e" args="() const " -->
const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueTypePtr</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a36f8e8d6f0e48c9bbb105905220605f">GetY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="16a2a099f9da09977683199e1daf8919"></a><!-- doxytag: member="wxPGProperty::HasFlag" ref="16a2a099f9da09977683199e1daf8919" args="(FlagType flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>HasFlag</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c77f444813f8c9af534a87e692c23c23">Hide</a> (bool hide)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#be0d0b4e8b177ef6805c74b5c048f593">InsertChoice</a> (const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fbcf920da6022bfdbc6050aea3ded3be"></a><!-- doxytag: member="wxPGProperty::IsEnabled" ref="fbcf920da6022bfdbc6050aea3ded3be" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsEnabled</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fe137b54ecac687a41ebd755600c5776"></a><!-- doxytag: member="wxPGProperty::IsFlagSet" ref="fe137b54ecac687a41ebd755600c5776" args="(FlagType flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsFlagSet</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d4e69c49c82f26946a65d99dbcc6e4a4"></a><!-- doxytag: member="wxPGProperty::IsKindOf" ref="d4e69c49c82f26946a65d99dbcc6e4a4" args="(wxPGPropertyClassInfo &amp;info)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsKindOf</b> (<a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a> &amp;info)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#609cbaf87c5ee626ff4ad5a14fe2fc97">IsOk</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cdf082726581da7c25b2e2fb991f5490"></a><!-- doxytag: member="wxPGProperty::IsSomeParent" ref="cdf082726581da7c25b2e2fb991f5490" args="(wxPGProperty *candidate_parent) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ff7d5250185ac44e7a0629d8f7823401">IsSubProperty</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="785c3679e91f5b878bcbaec31aa1bccc"></a><!-- doxytag: member="wxPGProperty::IsValueUnspecified" ref="785c3679e91f5b878bcbaec31aa1bccc" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsValueUnspecified</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d0b00df4a3916cb80adfa1227c70baf4">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d7221ec4c516aef1a5245f762402b9be">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#905f5ca0479004626e7670dbbebf8368">RecreateEditor</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#396ca09a6e712efb6375663e46e72c2c">SetAttrib</a> (int id, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#4cbee393bd7069c1683894a85af4b68f">SetAttribute</a> (int id, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#b84657520f1ef15241e71b8482d30368">SetAttributes</a> (const wxString &amp;attributes)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#8dcb2cb3f13c8d9ad8eeb70336c07d28">SetChoices</a> (const wxArrayString &amp;labels, const wxArrayInt &amp;values=(*((wxArrayInt *) NULL)))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7275467270d2c7ac3f847f4d1b6a1194">SetChoices</a> (<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#613b4866a6b2281bf0382b0d883feb86">SetChoiceSelection</a> (int newValue, const wxPGChoiceInfo &amp;choiceInfo)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d8a812e51f3e63e27ee5212f7b29d71f">SetChoicesExclusive</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5102b203f2839cd2f2d0d5d1a2f2de83">SetClientData</a> (ClientDataType clientData)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#90294ea6cae6cf504d032b46787bb6e4">SetEditor</a> (const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2cd2e6f0b30a1ab789f9ea8b58226260">SetEditor</a> (const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eaa77e366e277134ece29e48d94d3f05"></a><!-- doxytag: member="wxPGProperty::SetFlag" ref="eaa77e366e277134ece29e48d94d3f05" args="(FlagType flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="839af036b24fc35696f0ef3cb2b0670a"></a><!-- doxytag: member="wxPGProperty::SetHelpString" ref="839af036b24fc35696f0ef3cb2b0670a" args="(const wxString &amp;helpString)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetHelpString</b> (const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5acdc1db23a6e219de6619bc54e1a2e3"></a><!-- doxytag: member="wxPGProperty::SetLabel" ref="5acdc1db23a6e219de6619bc54e1a2e3" args="(const wxString &amp;label)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetLabel</b> (const wxString &amp;label)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a74671893440ce2a0f2a0e47ba897ad5">SetMaxLength</a> (int maxLen)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9eb7d1f243c6fb993b3563c241b2ef4a">SetValidator</a> (const wxValidator &amp;validator)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ed06089224f01494563f2192809e5706">SetValueFromInt</a> (long value, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bed75d94651bd8ab5415183f10b9f464">SetValueFromString</a> (const wxString &amp;text, int flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5c5be1292d329945b0a24e33db485207">SetValueImage</a> (wxBitmap &amp;bmp)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4e55506bbc49f0b7d447df71a00f2df6"></a><!-- doxytag: member="wxPGProperty::SetValueToUnspecified" ref="4e55506bbc49f0b7d447df71a00f2df6" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetValueToUnspecified</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="40a1d30293c87d936a2ad27e9bd75cca"></a><!-- doxytag: member="wxPGProperty::ShowError" ref="40a1d30293c87d936a2ad27e9bd75cca" args="(const wxString &amp;msg)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ShowError</b> (const wxString &amp;msg)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dcb03b7d4122415c2c5a5006e14a09e0"></a><!-- doxytag: member="wxPGProperty::StdValidationProcedure" ref="dcb03b7d4122415c2c5a5006e14a09e0" args="(wxPGVariant value)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>StdValidationProcedure</b> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3166cf5d6e39a8c5891e3163ed193bd1"></a><!-- doxytag: member="wxPGProperty::UpdateControl" ref="3166cf5d6e39a8c5891e3163ed193bd1" args="(wxWindow *primary)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>UpdateControl</b> (wxWindow *primary)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9de64f67dc90b2aaad1f5e1a6d30e7e8">UsesAutoUnspecified</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#dde08613b47eda8e324483ac754e8920">wxPGProperty</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#de8edb58a7853a539664c77b2d9c9c81">wxPGProperty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c18fca1cac5343b510220929a4f6a0bc">~wxPGProperty</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1aff461e3784961db83ba54428204568"></a><!-- doxytag: member="wxPGProperty::DoSetName" ref="1aff461e3784961db83ba54428204568" args="(const wxString &amp;str)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ae75d0ba0c6ec4a79e14ca50e08f451e"></a><!-- doxytag: member="wxPGProperty::GetDepth" ref="ae75d0ba0c6ec4a79e14ca50e08f451e" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDepth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="09e06b449e7a2319d5b6ebf234d9d913"></a><!-- doxytag: member="wxPGProperty::Init" ref="09e06b449e7a2319d5b6ebf234d9d913" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>Init</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f27ecd4faff8ff097e84f21c697ed38e">Init</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="84c993bb166b82ab7fac4b4b2c5c4d19"></a><!-- doxytag: member="wxPGProperty::m_arrIndex" ref="84c993bb166b82ab7fac4b4b2c5c4d19" args="" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bf9fef30bb9fbd387aa634a7a7ab70ba"></a><!-- doxytag: member="wxPGProperty::m_bgColIndex" ref="bf9fef30bb9fbd387aa634a7a7ab70ba" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7ea21919dce1a576cb892fceb0950edf"></a><!-- doxytag: member="wxPGProperty::m_clientData" ref="7ea21919dce1a576cb892fceb0950edf" args="" -->
ClientDataType&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_clientData</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fee9dac605393d9ee26245753b77ddcb"></a><!-- doxytag: member="wxPGProperty::m_dataExt" ref="fee9dac605393d9ee26245753b77ddcb" args="" -->
<a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_dataExt</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="06ab2c180ea47e4826314dc34227fa2a"></a><!-- doxytag: member="wxPGProperty::m_depth" ref="06ab2c180ea47e4826314dc34227fa2a" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4e7b596662266dafed249a29278db385"></a><!-- doxytag: member="wxPGProperty::m_depthBgCol" ref="4e7b596662266dafed249a29278db385" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1ecd12a864fdaa348c4af27d2f749848"></a><!-- doxytag: member="wxPGProperty::m_fgColIndex" ref="1ecd12a864fdaa348c4af27d2f749848" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_fgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="38a893dd0afd55af68003a65ef9469ef"></a><!-- doxytag: member="wxPGProperty::m_flags" ref="38a893dd0afd55af68003a65ef9469ef" args="" -->
FlagType&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3e0236d1ce44618abaf8420091fcd3b6"></a><!-- doxytag: member="wxPGProperty::m_label" ref="3e0236d1ce44618abaf8420091fcd3b6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a26eaa0fb2f3b1b777e5c55f3b2a08a"></a><!-- doxytag: member="wxPGProperty::m_maxLen" ref="0a26eaa0fb2f3b1b777e5c55f3b2a08a" args="" -->
short&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_maxLen</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e0567605bf703d69601ff731ab0e82f6"></a><!-- doxytag: member="wxPGProperty::m_name" ref="e0567605bf703d69601ff731ab0e82f6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="32cad241d50a5108bc352269226a5ce1"></a><!-- doxytag: member="wxPGProperty::m_parent" ref="32cad241d50a5108bc352269226a5ce1" args="" -->
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a585b635c9a38b055782c9c673ee7c9"></a><!-- doxytag: member="wxPGProperty::m_parentingType" ref="0a585b635c9a38b055782c9c673ee7c9" args="" -->
signed char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parentingType</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1906d0b38e1318308b82e3a51a185a38"></a><!-- doxytag: member="wxPGProperty::m_y" ref="1906d0b38e1318308b82e3a51a185a38" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_y</b></td></tr>

</table>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="de8edb58a7853a539664c77b2d9c9c81"></a><!-- doxytag: member="wxPGProperty::wxPGProperty" ref="de8edb58a7853a539664c77b2d9c9c81" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGProperty::wxPGProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Basic constructor. 
<p>
Should not be necessary to override. 
</div>
</div><p>
<a class="anchor" name="dde08613b47eda8e324483ac754e8920"></a><!-- doxytag: member="wxPGProperty::wxPGProperty" ref="dde08613b47eda8e324483ac754e8920" args="(const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGProperty::wxPGProperty           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Real used property classes should have constructor of this style:<p>
<div class="fragment"><pre class="fragment">        <span class="comment">// If MyValueType is a class, then it should be a constant reference</span>
        <span class="comment">// (e.g. const MyValueType&amp; ) instead.</span>
        wxMyProperty( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name,
            MyValueType value ) : <a class="code" href="classwxPGProperty.htm" title="wxPGProperty, alias wxBasePropertyClass, is base class for properties.">wxPGProperty</a>
        {
            <span class="comment">// Only required if MyValueType is not built-in default</span>
            <span class="comment">// (wxString, long, double, bool, and wxArrayString are;</span>
            <span class="comment">// wxFont, wxColour, etc. are not).</span>
            wxPG_INIT_REQUIRED_TYPE(MyValueType)
            <a class="code" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488" title="Sets property&amp;#39;s internal value.">DoSetValue</a>(value); <span class="comment">// Generally recommended way to set the initial value.</span>

            <span class="comment">// If has child properties (i.e. wxPGPropertyWithChildren is used</span>
            <span class="comment">// as the parent class), then create children here. For example:</span>
            <span class="comment">//     AddChild( new wxStringProperty( wxT("Subprop 1"), wxPG_LABEL, value.GetSubProp1() ) );</span>
        }
</pre></div><p>
Of course, in this example, <a class="el" href="classwxPGProperty.htm" title="wxPGProperty, alias wxBasePropertyClass, is base class for properties.">wxPGProperty</a> could also be <a class="el" href="classwxPGPropertyWithChildren.htm" title="wxPGPropertyWithChildren, alias wxParentPropertyClass, is a base class for new properties...">wxPGPropertyWithChildren</a> (if it has sub-properties) or actually any other property class. 
</div>
</div><p>
<a class="anchor" name="c18fca1cac5343b510220929a4f6a0bc"></a><!-- doxytag: member="wxPGProperty::~wxPGProperty" ref="c18fca1cac5343b510220929a4f6a0bc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxPGProperty::~wxPGProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Virtual destructor. 
<p>
It is customary for derived properties to override this. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="f823df743b115386be4d3e7f1412afb1"></a><!-- doxytag: member="wxPGProperty::AppendChoice" ref="f823df743b115386be4d3e7f1412afb1" args="(const wxString &amp;label, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::AppendChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing constant (key=value) sequences.">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="61e04603ffafaa3a1216efd90f0c444d"></a><!-- doxytag: member="wxPGProperty::CanHaveExtraChildren" ref="61e04603ffafaa3a1216efd90f0c444d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::CanHaveExtraChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is wxPropertyCategory or wxCustomProperty) 
</div>
</div><p>
<a class="anchor" name="137f1b7ea16f1f18fcc3e50ec107da1f"></a><!-- doxytag: member="wxPGProperty::DeleteChoice" ref="137f1b7ea16f1f18fcc3e50ec107da1f" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::DeleteChoice           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Removes entry from property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing constant (key=value) sequences.">wxPGChoices</a> and editor control (if it is active). 
<p>
If selected item is deleted, then the value is set to unspecified. 
</div>
</div><p>
<a class="anchor" name="2a890026b842c51658e8c358e137722d"></a><!-- doxytag: member="wxPGProperty::DoGetEditorClass" ref="2a890026b842c51658e8c358e137722d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::DoGetEditorClass           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to an instance of editor class. 
<p>

<p>Reimplemented in <a class="el" href="classwxPGRootPropertyClass.htm#5fc52eda0a120fc3ea5b97d63bd7aeda">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#d8f636cc43e80146dc0aba3f7cc5f165">wxPropertyCategoryClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="f1b9f11eab24b1c1331f3f4a663ff98e"></a><!-- doxytag: member="wxPGProperty::DoGetValidator" ref="f1b9f11eab24b1c1331f3f4a663ff98e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxValidator* wxPGProperty::DoGetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator). 
<p>
Setting validator explicitly via SetPropertyValidator will override this.<p>
In most situations, code like this should work well (macros are used to maintain one actual validator instance, so on the second call the function exits within the first macro):<p>
<div class="fragment"><pre class="fragment">        wxValidator* wxMyPropertyClass::DoGetValidator ()<span class="keyword"> const</span>
<span class="keyword">        </span>{
            WX_PG_DOGETVALIDATOR_ENTRY()

            wxMyValidator* validator = new wxMyValidator(...);

            ... prepare validator...

            WX_PG_DOGETVALIDATOR_EXIT(validator)
        }
</pre></div><p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>You can get common filename validator by returning wxFilePropertyClass::GetClassValidator(). wxDirProperty, for example, uses it. </dd></dl>

</div>
</div><p>
<a class="anchor" name="6244dc55ee2e62fc47df807ed0c59436"></a><!-- doxytag: member="wxPGProperty::DoGetValue" ref="6244dc55ee2e62fc47df807ed0c59436" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxPGVariant wxPGProperty::DoGetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns properly constructed wxPGVariant. 
<p>

<p>Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#0e39de5c0e36bc2de82d817a46d1533c">wxParentPropertyClass</a>, and <a class="el" href="classwxCustomPropertyClass.htm#b264596de111adc734770d95504e8c0b">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="fcdb478c660e6a79c03147e8e9483488"></a><!-- doxytag: member="wxPGProperty::DoSetValue" ref="fcdb478c660e6a79c03147e8e9483488" args="(wxPGVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::DoSetValue           </td>
          <td>(</td>
          <td class="paramtype">wxPGVariant&nbsp;</td>
          <td class="paramname"> <em>value</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets property's internal value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Simple container with GetString(), GetLong() etc. methods. Currently recommended means to extract value is to use wxPGVariantToXXX(value) macro. </td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Example pseudo-implementation with comments: <div class="fragment"><pre class="fragment">        <span class="keywordtype">void</span> wxMyProperty::DoSetValue ( wxPGVariant value )
        {
            <span class="comment">// A) Get value. For example</span>
            <span class="keyword">const</span> wxMyValueType* pvalue = wxPGVariantToWxObjectPtr(value,wxMyValueType);
            <span class="comment">//    or:</span>
            <span class="keyword">const</span> wxString&amp; str = wxPGVariantToString(value);
            <span class="comment">//    or:</span>
            <span class="keywordtype">long</span> val = wxPGVariantToLong(value);

            <span class="comment">// B) If value is wxObject or void based with NULL default, then handle that:</span>
            <span class="keywordflow">if</span> ( pvalue )
                m_value = *pvalue;
            <span class="keywordflow">else</span>
                pmyvalue-&gt;SetToDefault();

            <span class="comment">// Otherwise</span>
            <span class="comment">// m_value = *pvalue;</span>
            <span class="comment">// is sufficient.</span>

            <span class="comment">// C) If has children, this should be here (before displaying in control).</span>
            RefreshChildren();

        }
</pre></div> </dd></dl>

<p>Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#646e62d5bf16b5abc80bca1709151094">wxParentPropertyClass</a>, and <a class="el" href="classwxCustomPropertyClass.htm#f7483a1467d1e20f3693b85e5c261872">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="a364ea566779dba19d54b6988bf2077b"></a><!-- doxytag: member="wxPGProperty::EnsureDataExt" ref="a364ea566779dba19d54b6988bf2077b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::EnsureDataExt           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property did not have data extension, one is created now (returns true in that case). 
<p>

</div>
</div><p>
<a class="anchor" name="bc12babaa354fe4ce0fb49af270bba8e"></a><!-- doxytag: member="wxPGProperty::GetAttributes" ref="bc12babaa354fe4ce0fb49af270bba8e" args="(unsigned int flagmask=0xFFFF)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetAttributes           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>flagmask</em> = <code>0xFFFF</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns comma-delimited string of property attributes. 
<p>

</div>
</div><p>
<a class="anchor" name="f6d4c36f0c810ddc16f0b5609be2fde1"></a><!-- doxytag: member="wxPGProperty::GetChildCount" ref="f6d4c36f0c810ddc16f0b5609be2fde1" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t wxPGProperty::GetChildCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns number of children (always 0 for normal properties). 
<p>

</div>
</div><p>
<a class="anchor" name="805b98f7d147782079bb9a48915a949f"></a><!-- doxytag: member="wxPGProperty::GetChoiceInfo" ref="805b98f7d147782079bb9a48915a949f" args="(wxPGChoiceInfo *choiceinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int wxPGProperty::GetChoiceInfo           </td>
          <td>(</td>
          <td class="paramtype">wxPGChoiceInfo *&nbsp;</td>
          <td class="paramname"> <em>choiceinfo</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns -1 in choiceinfo-&gt;m_itemCount, then in that case this class be derived from wxBaseEnumPropertyClass (see propdev.h) and GetEntry is used to fill an array (slower, but handier if you don't store your labels as arrays of strings).</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#72712b986ce986cabcf5e31fbccbe78b">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="e0b3f620d8fb3f543b8915218f46ce46"></a><!-- doxytag: member="wxPGProperty::GetClassInfo" ref="e0b3f620d8fb3f543b8915218f46ce46" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="structwxPGPropertyClassInfo.htm">wxPGPropertyClassInfo</a>* wxPGProperty::GetClassInfo           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns classinfo of the property class. 
<p>

<p>Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#4238640b782d647f6fc86d930349e985">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#1a6a343312cc92bce7a0cd3a391e4175">wxPropertyCategoryClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="9479934a63b46a6764f174169839a6d5"></a><!-- doxytag: member="wxPGProperty::GetClassName" ref="9479934a63b46a6764f174169839a6d5" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const wxChar* wxPGProperty::GetClassName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns classname (for example, "wxStringProperty" for wxStringProperty) of a property class. 
<p>

<p>Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#7cf41f0a9e1090fa31dc2fb826305bcf">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#7f5fb0aa885cec1f2c0c26db53eeea82">wxPropertyCategoryClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="6e5e5452bc05eeed910725478f2738a5"></a><!-- doxytag: member="wxPGProperty::GetDataExt" ref="6e5e5452bc05eeed910725478f2738a5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGPropertyDataExt.htm">wxPGPropertyDataExt</a>* wxPGProperty::GetDataExt           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's data extension (NULL if none). 
<p>

</div>
</div><p>
<a class="anchor" name="921b49bc576e83b6cb900ade60f3787a"></a><!-- doxytag: member="wxPGProperty::GetGrid" ref="921b49bc576e83b6cb900ade60f3787a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGrid           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property grid where property lies. 
<p>

</div>
</div><p>
<a class="anchor" name="af3cbf9dbc89396c4a00c50da365400f"></a><!-- doxytag: member="wxPGProperty::GetId" ref="af3cbf9dbc89396c4a00c50da365400f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGId.htm">wxPGId</a> wxPGProperty::GetId           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property id. 
<p>

</div>
</div><p>
<a class="anchor" name="ea61b0869da25fb9eec2648132e4063b"></a><!-- doxytag: member="wxPGProperty::GetImageSize" ref="ea61b0869da25fb9eec2648132e4063b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxSize wxPGProperty::GetImageSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns size of the custom painted image in front of property. 
<p>
This method must be overridden to return non-default value if OnCustomPaint is to be called. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If flexible image size is desired, return <a class="el" href="group__miscellaneous.htm#g8184f6475a4dd37b52937c8a5035caf4" title="Return this in GetImageSize() to indicate that the custom painted property image...">wxPG_FLEXIBLE_SIZE(wid,hei)</a>. OnCustomPaint is then called to measure items as well (see for <a class="el" href="classwxPGProperty.htm#d0b00df4a3916cb80adfa1227c70baf4" title="Override to paint an image in front of the property value text or drop-down list...">wxPGProperty::OnCustomPaint</a> for measure call specs).</li><li>If entire property, including text, is to be custom painted, then <a class="el" href="group__miscellaneous.htm#gf75be79cbd217ac47e1713c3a92ba25b" title="Return this in GetImageSize() to indicate that the property is custom painted completely...">wxPG_FULL_CUSTOM_PAINT_SIZE(hei)</a> or <a class="el" href="group__miscellaneous.htm#g9d35084589d5aee5cfdf36d56f368c4e" title="Return this in GetImageSize() to indicate that the property is custom painted completely...">wxPG_FULL_CUSTOM_PAINT_FLEXIBLE_SIZE(hei)</a> is to be returned.</li><li>Default behaviour is to return wxSize(0,0), which means no image.</li><li>Default image width or height is indicated with dimension -1. </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#e537d40c5578d65e00a395dc5cdde959">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="ef71581ec3dcd1e17457457def9f9d24"></a><!-- doxytag: member="wxPGProperty::GetIndexInParent" ref="ef71581ec3dcd1e17457457def9f9d24" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int wxPGProperty::GetIndexInParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns position in parent's array. 
<p>

</div>
</div><p>
<a class="anchor" name="7610de7df326219f954133b2460f7bd9"></a><!-- doxytag: member="wxPGProperty::GetLabel" ref="7610de7df326219f954133b2460f7bd9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetLabel           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's label. 
<p>

</div>
</div><p>
<a class="anchor" name="ef439150fcdfcc32bebedb278aea9806"></a><!-- doxytag: member="wxPGProperty::GetLastVisibleSubItem" ref="ef439150fcdfcc32bebedb278aea9806" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetLastVisibleSubItem           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns last visible sub-property, recursively. 
<p>

</div>
</div><p>
<a class="anchor" name="50aa7238a183862723e1505d5cffc341"></a><!-- doxytag: member="wxPGProperty::GetMainParent" ref="50aa7238a183862723e1505d5cffc341" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetMainParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns highest level non-category, non-root parent. 
<p>
Useful when you have nested wxCustomProperties/wxParentProperties. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Thus, if immediate parent is root or category, this will return the property itself. </dd></dl>

</div>
</div><p>
<a class="anchor" name="cc8d2a997f98e58813f6bd1af670ea13"></a><!-- doxytag: member="wxPGProperty::GetName" ref="cc8d2a997f98e58813f6bd1af670ea13" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's name (alternate way to access property). 
<p>

</div>
</div><p>
<a class="anchor" name="cd2f5a538affea4c48c75244e292dea5"></a><!-- doxytag: member="wxPGProperty::GetParent" ref="cd2f5a538affea4c48c75244e292dea5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPGProperty::GetParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return parent of property. 
<p>

</div>
</div><p>
<a class="anchor" name="f9c233225fe976b66c05a27ebeef0314"></a><!-- doxytag: member="wxPGProperty::GetParentingType" ref="f9c233225fe976b66c05a27ebeef0314" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">signed char wxPGProperty::GetParentingType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns 0 for normal items. 
<p>
1 for categories, -1 for other properties with children, -2 for wxCustomProperty (mostly like -1 ones but with few expections). <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Should not be overridden by new custom properties. Usually only used internally. </dd></dl>

</div>
</div><p>
<a class="anchor" name="b524de560219c9be11b1b30b3c435156"></a><!-- doxytag: member="wxPGProperty::GetParentState" ref="b524de560219c9be11b1b30b3c435156" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPGProperty::GetParentState           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns <a class="el" href="classwxPropertyGridState.htm" title="Contains information of a single wxPropertyGrid page.">wxPropertyGridState</a> to which this property belongs. 
<p>

<p>Reimplemented in <a class="el" href="classwxPGPropertyWithChildren.htm#fb3f0059b7ad09185138f1eb90a59b8d">wxPGPropertyWithChildren</a>.</p>

</div>
</div><p>
<a class="anchor" name="d37c4018adffa1b5191f740b8beca9d6"></a><!-- doxytag: member="wxPGProperty::GetType" ref="d37c4018adffa1b5191f740b8beca9d6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxChar* wxPGProperty::GetType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType. 
</div>
</div><p>
<a class="anchor" name="79cb24032f2aaee16a260ca560957a6f"></a><!-- doxytag: member="wxPGProperty::GetValidator" ref="79cb24032f2aaee16a260ca560957a6f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxValidator* wxPGProperty::GetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets assignable version of property's validator. 
<p>

</div>
</div><p>
<a class="anchor" name="29f70a60e4844efbebc140270e1a4358"></a><!-- doxytag: member="wxPGProperty::GetValueAsString" ref="29f70a60e4844efbebc140270e1a4358" args="(int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxPGProperty::GetValueAsString           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns text representation of property's value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). </td></tr>
  </table>
</dl>

<p>Reimplemented in <a class="el" href="classwxParentPropertyClass.htm#c142e13fce14f1c5d0a8ec370e99eb41">wxParentPropertyClass</a>, <a class="el" href="classwxCustomPropertyClass.htm#e534cefa3f881eee7db086ea9815e241">wxCustomPropertyClass</a>, <a class="el" href="classwxPGPropertyWithChildren.htm#f6837db08ed7b62b8cd2e0231ea4a40f">wxPGPropertyWithChildren</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#1bcb34287d868f17a40559d00e2e2d76">wxPropertyCategoryClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="a4dc9b698a65205adf6ef4cb165de5ce"></a><!-- doxytag: member="wxPGProperty::GetValueAsVariant" ref="a4dc9b698a65205adf6ef4cb165de5ce" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPGProperty::GetValueAsVariant           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns value as wxVariant. 
<p>

</div>
</div><p>
<a class="anchor" name="5393b0685a8d8483c1a2147c7ee02ed5"></a><!-- doxytag: member="wxPGProperty::GetValueType" ref="5393b0685a8d8483c1a2147c7ee02ed5" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a>* wxPGProperty::GetValueType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to the object that has methods related to the value type of this property. 
<p>
Keep atleast this method abstract so the class is kept abstract. 
<p>Implemented in <a class="el" href="classwxPGRootPropertyClass.htm#c6601ca3d14f00ee4170717024c98d7c">wxPGRootPropertyClass</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#8b4cecc53b614b46a867461e390a574e">wxPropertyCategoryClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="a36f8e8d6f0e48c9bbb105905220605f"></a><!-- doxytag: member="wxPGProperty::GetY" ref="a36f8e8d6f0e48c9bbb105905220605f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::GetY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets pre-calculated top y coordinate of property graphics. 
<p>
This cannot be relied on all times (<a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> knows when :) ), and value is -1 if property is not visible. 
</div>
</div><p>
<a class="anchor" name="c77f444813f8c9af534a87e692c23c23"></a><!-- doxytag: member="wxPGProperty::Hide" ref="c77f444813f8c9af534a87e692c23c23" args="(bool hide)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::Hide           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>hide</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Hides or reveals the property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hide</em>&nbsp;</td><td>true for hide, false for reveal. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="f27ecd4faff8ff097e84f21c697ed38e"></a><!-- doxytag: member="wxPGProperty::Init" ref="f27ecd4faff8ff097e84f21c697ed38e" args="(const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::Init           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initializes the property. 
<p>
Usually only called in the constructor. 
</div>
</div><p>
<a class="anchor" name="be0d0b4e8b177ef6805c74b5c048f593"></a><!-- doxytag: member="wxPGProperty::InsertChoice" ref="be0d0b4e8b177ef6805c74b5c048f593" args="(const wxString &amp;label, int index, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::InsertChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing constant (key=value) sequences.">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="609cbaf87c5ee626ff4ad5a14fe2fc97"></a><!-- doxytag: member="wxPGProperty::IsOk" ref="609cbaf87c5ee626ff4ad5a14fe2fc97" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsOk           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if property is valid and <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> methods can operate on it safely. 
<p>

</div>
</div><p>
<a class="anchor" name="ff7d5250185ac44e7a0629d8f7823401"></a><!-- doxytag: member="wxPGProperty::IsSubProperty" ref="ff7d5250185ac44e7a0629d8f7823401" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsSubProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if this is a sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="d0b00df4a3916cb80adfa1227c70baf4"></a><!-- doxytag: member="wxPGProperty::OnCustomPaint" ref="d0b00df4a3916cb80adfa1227c70baf4" args="(wxDC &amp;dc, const wxRect &amp;rect, wxPGPaintData &amp;paintdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::OnCustomPaint           </td>
          <td>(</td>
          <td class="paramtype">wxDC &amp;&nbsp;</td>
          <td class="paramname"> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxRect &amp;&nbsp;</td>
          <td class="paramname"> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>paintdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b" title="Returns size of the custom painted image in front of property.">wxPGProperty::GetImageSize</a> is overridden as well). 
<p>
If property's <a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b" title="Returns size of the custom painted image in front of property.">GetImageSize()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b" title="Returns size of the custom painted image in front of property.">GetImageSize()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b" title="Returns size of the custom painted image in front of property.">GetImageSize()</a> returns a "flexible" height ( using <a class="el" href="group__miscellaneous.htm#g8184f6475a4dd37b52937c8a5035caf4" title="Return this in GetImageSize() to indicate that the custom painted property image...">wxPG_FLEXIBLE_SIZE(W,H)</a> macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm" title="Contains information relayed to property&#39;s OnCustomPaint.">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Changing font and text colour affects the text drawn next to the painted image (which is done immediately after the OnCustomPaint call finishes).</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">GetValueAsString</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#1b88d706bcd4ada3839401e25a98ed2e">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="16fbe26240bf47ab0a9a02d21781da73"></a><!-- doxytag: member="wxPGProperty::OnEvent" ref="16fbe26240bf47ab0a9a02d21781da73" args="(wxPropertyGrid *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::OnEvent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxEvent &amp;&nbsp;</td>
          <td class="paramname"> <em>event</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, wxSystemColourProperty custom handles wxEVT_COMMAND_CHOICE_SELECTED). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. This is case, for example, when enter is pressed in wxTextCtrl. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="d7221ec4c516aef1a5245f762402b9be"></a><!-- doxytag: member="wxPGProperty::PrepareValueForDialogEditing" ref="d7221ec4c516aef1a5245f762402b9be" args="(wxPropertyGrid *propgrid)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::PrepareValueForDialogEditing           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <div class="fragment"><pre class="fragment">            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 GetEditorClass()-&gt;<a class="code" href="classwxPGEditor.htm#2fd3cfb61e66df3a62c9a86a1346c70a" title="Copies value from ctrl to property&amp;#39;s internal storage.">CopyValueFromControl</a>( <span class="keyword">this</span>, primary );
</pre></div> in <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="905f5ca0479004626e7670dbbebf8368"></a><!-- doxytag: member="wxPGProperty::RecreateEditor" ref="905f5ca0479004626e7670dbbebf8368" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::RecreateEditor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property's editor is created this forces its recreation. 
<p>
Useful in SetAttribute etc. Returns true if actually did anything. 
</div>
</div><p>
<a class="anchor" name="396ca09a6e712efb6375663e46e72c2c"></a><!-- doxytag: member="wxPGProperty::SetAttrib" ref="396ca09a6e712efb6375663e46e72c2c" args="(int id, wxVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetAttrib           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Version of SetAttribute with straight wxVariant argument (SetAttribute itself cannot be overloaded for this). 
<p>

</div>
</div><p>
<a class="anchor" name="4cbee393bd7069c1683894a85af4b68f"></a><!-- doxytag: member="wxPGProperty::SetAttribute" ref="4cbee393bd7069c1683894a85af4b68f" args="(int id, wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets an attribute of this property. 
<p>
This is quite property class specific, and there are no common attributes. Note that attribute may be specific to a property instance, or it may affect all properties of its class. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>id</em>&nbsp;</td><td>Identifier of attribute </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Value for that attribute. </td></tr>
  </table>
</dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#7d3f3abc22871a1be40b834da5fc58bc">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="b84657520f1ef15241e71b8482d30368"></a><!-- doxytag: member="wxPGProperty::SetAttributes" ref="b84657520f1ef15241e71b8482d30368" args="(const wxString &amp;attributes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetAttributes           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>attributes</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets attributes from a comma-delimited string. 
<p>

</div>
</div><p>
<a class="anchor" name="8dcb2cb3f13c8d9ad8eeb70336c07d28"></a><!-- doxytag: member="wxPGProperty::SetChoices" ref="8dcb2cb3f13c8d9ad8eeb70336c07d28" args="(const wxArrayString &amp;labels, const wxArrayInt &amp;values=(*((wxArrayInt *) NULL)))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetChoices           </td>
          <td>(</td>
          <td class="paramtype">const wxArrayString &amp;&nbsp;</td>
          <td class="paramname"> <em>labels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayInt &amp;&nbsp;</td>
          <td class="paramname"> <em>values</em> = <code>(*((wxArrayInt*)NULL))</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets new set of choices for property. 
<p>

</div>
</div><p>
<a class="anchor" name="7275467270d2c7ac3f847f4d1b6a1194"></a><!-- doxytag: member="wxPGProperty::SetChoices" ref="7275467270d2c7ac3f847f4d1b6a1194" args="(wxPGChoices &amp;choices)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetChoices           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>choices</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets new set of choices for property. 
<p>

</div>
</div><p>
<a class="anchor" name="613b4866a6b2281bf0382b0d883feb86"></a><!-- doxytag: member="wxPGProperty::SetChoiceSelection" ref="613b4866a6b2281bf0382b0d883feb86" args="(int newValue, const wxPGChoiceInfo &amp;choiceInfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetChoiceSelection           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>newValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPGChoiceInfo &amp;&nbsp;</td>
          <td class="paramname"> <em>choiceInfo</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Changes value of a property with choices, but only works if the value type is long or string. 
<p>

</div>
</div><p>
<a class="anchor" name="d8a812e51f3e63e27ee5212f7b29d71f"></a><!-- doxytag: member="wxPGProperty::SetChoicesExclusive" ref="d8a812e51f3e63e27ee5212f7b29d71f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetChoicesExclusive           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property has choices and they are not yet exclusive, new such copy of them will be created. 
<p>

</div>
</div><p>
<a class="anchor" name="5102b203f2839cd2f2d0d5d1a2f2de83"></a><!-- doxytag: member="wxPGProperty::SetClientData" ref="5102b203f2839cd2f2d0d5d1a2f2de83" args="(ClientDataType clientData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetClientData           </td>
          <td>(</td>
          <td class="paramtype">ClientDataType&nbsp;</td>
          <td class="paramname"> <em>clientData</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets client data (void*) of a property. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>

</div>
</div><p>
<a class="anchor" name="90294ea6cae6cf504d032b46787bb6e4"></a><!-- doxytag: member="wxPGProperty::SetEditor" ref="90294ea6cae6cf504d032b46787bb6e4" args="(const wxString &amp;editorName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>editorName</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="2cd2e6f0b30a1ab789f9ea8b58226260"></a><!-- doxytag: member="wxPGProperty::SetEditor" ref="2cd2e6f0b30a1ab789f9ea8b58226260" args="(const wxPGEditor *editor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="paramname"> <em>editor</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="a74671893440ce2a0f2a0e47ba897ad5"></a><!-- doxytag: member="wxPGProperty::SetMaxLength" ref="a74671893440ce2a0f2a0e47ba897ad5" args="(int maxLen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetMaxLength           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>maxLen</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set max length of text editor. 
<p>

</div>
</div><p>
<a class="anchor" name="9eb7d1f243c6fb993b3563c241b2ef4a"></a><!-- doxytag: member="wxPGProperty::SetValidator" ref="9eb7d1f243c6fb993b3563c241b2ef4a" args="(const wxValidator &amp;validator)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValidator           </td>
          <td>(</td>
          <td class="paramtype">const wxValidator &amp;&nbsp;</td>
          <td class="paramname"> <em>validator</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets wxValidator for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="ed06089224f01494563f2192809e5706"></a><!-- doxytag: member="wxPGProperty::SetValueFromInt" ref="ed06089224f01494563f2192809e5706" args="(long value, int flags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::SetValueFromInt           </td>
          <td>(</td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488" title="Sets property&#39;s internal value.">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#8e6e83deaef38b7f1fb54dc4fb0b80ca">wxCustomPropertyClass</a>.</p>

</div>
</div><p>
<a class="anchor" name="bed75d94651bd8ab5415183f10b9f464"></a><!-- doxytag: member="wxPGProperty::SetValueFromString" ref="bed75d94651bd8ab5415183f10b9f464" args="(const wxString &amp;text, int flags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::SetValueFromString           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts string to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#fcdb478c660e6a79c03147e8e9483488" title="Sets property&#39;s internal value.">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>String to get the value from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>report_error</em>&nbsp;</td><td>If true, invalid string will be reported (prefer to use wxLogError). </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

<p>Reimplemented in <a class="el" href="classwxCustomPropertyClass.htm#836e6f3324e94fcfad217d037345fa3a">wxCustomPropertyClass</a>, and <a class="el" href="classwxPGPropertyWithChildren.htm#b5cfed2b0d717e4e3568b0529a9dec77">wxPGPropertyWithChildren</a>.</p>

</div>
</div><p>
<a class="anchor" name="5c5be1292d329945b0a24e33db485207"></a><!-- doxytag: member="wxPGProperty::SetValueImage" ref="5c5be1292d329945b0a24e33db485207" args="(wxBitmap &amp;bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValueImage           </td>
          <td>(</td>
          <td class="paramtype">wxBitmap &amp;&nbsp;</td>
          <td class="paramname"> <em>bmp</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set wxBitmap in front of the value. 
<p>
This bitmap will be ignored if property class has implemented OnCustomPaint. 
</div>
</div><p>
<a class="anchor" name="9de64f67dc90b2aaad1f5e1a6d30e7e8"></a><!-- doxytag: member="wxPGProperty::UsesAutoUnspecified" ref="9de64f67dc90b2aaad1f5e1a6d30e7e8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::UsesAutoUnspecified           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if containing grid uses wxPG_EX_AUTO_UNSPECIFIED_VALUES. 
<p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Jun 28 15:57:26 2008 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
