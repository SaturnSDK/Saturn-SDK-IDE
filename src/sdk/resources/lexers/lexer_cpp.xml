<?xml version="1.0"?>
<!DOCTYPE CodeBlocks_lexer_properties>
<CodeBlocks_lexer_properties>
		<Lexer name="C/C++"
				index="3"
				filemasks="*.c,*.cpp,*.cc,*.cxx,*.h,*.hpp,*.hh,*.hxx,*.inl">
				<Style name="Default"
						index="0"
						fg="0,0,0"
						bg="255,255,255"
						bold="0"
						italics="0"
						underlined="0"/>
				<Style name="Comment (normal)"
						index="1"
						fg="160,160,160"/>
				<Style name="Comment line (normal)"
						index="2"
						fg="190,190,230"/>
				<Style name="Comment (documentation)"
						index="3"
						fg="128,128,255"
						bold="1"/>
				<Style name="Comment line (documentation)"
						index="15"
						fg="128,128,255"
						bold="1"/>
				<Style name="Comment keyword (documentation)"
						index="17"
						fg="0,128,128"/>
				<Style name="Comment keyword error (documentation)"
						index="18"
						fg="128,0,0"/>
				<Style name="Number"
						index="4"
						fg="240,0,240"/>
				<Style name="Keyword"
						index="5"
						fg="0,0,160"
						bold="1"/>
				<Style name="User keyword"
						index="16"
						fg="0,160,0"
						bold="1"/>
				<Style name="String"
						index="6,12"
						fg="0,0,255"/>
				<Style name="Character"
						index="7"
						fg="224,160,0"/>
				<Style name="UUID"
						index="8"
						fg="0,0,0"/>
				<Style name="Preprocessor"
						index="9"
						fg="0,160,0"/>
				<Style name="Operator"
						index="10"
						fg="255,0,0"/>
				<Style name="Selection"
						index="-99"
						bg="192,192,192"/>
				<Style name="Active line"
						index="-98"
						bg="255,255,160"/>
				<Style name="Breakpoint line"
						index="-2"
						bg="255,160,160"/>
				<Style name="Debugger active line"
						index="-3"
						bg="160,160,255"/>
				<Style name="Compiler error line"
						index="-4"
						bg="255,128,0"/>
				<Style name="Matching brace highlight"
						index="34"
						bg="128,255,255"
						bold="1"/>
				<Style name="No matching brace highlight"
						index="35"
						fg="255,255,255"
						bg="255,0,0"
						bold="1"/>
				<Style name="wxSmith-generated code"
						index="99"
						fg="64,64,128"
						bg="255,255,255"
						italics="1"/>

				<Keywords>
                        <!-- Primary keywords and identifiers -->
                        <Set index="0"
                            value="_Char16_t _Char32_t align_union alignof asm auto bool break case catch char class const const_cast constexpr continue decltype default delete do double dynamic_cast else enum explicit export extern false final float for friend goto if import inline int long mutable namespace new nullptr operator override private protected public register reinterpret_cast return short signed sizeof static static_cast struct switch template this throw true try typedef typeid typename union unsigned using virtual void volatile wchar_t whilestatic_assert

                                   int8_t uint8_t int16_t uint16_t int32_t uint32_t int64_t uint64_t
                                   int_least8_t uint_least8_t int_least16_t uint_least16_t
                                   int_least32_t uint_least32_t int_least64_t uint_least64_t
                                   int_fast8_t uint_fast8_t int_fast16_t uint_fast16_t
                                   int_fast32_t uint_fast32_t int_fast64_t uint_fast64_t
                                   intptr_t uintptr_t intmax_t uintmax_t
                                   wint_t wchar_t wctrans_t wctype_t size_t time_t
                                   and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq"/>
                        <!-- Secondary keywords and identifiers -->
                        <Set index="1"
                            value="accumulate add_const add_cv add_pointer add_reference add_volatile adjacent_difference adjacent_find aligned_storage alignment_of all_of allocate_shared allocator any_of array assign at auto_ptr back back_insert_iterator back_item bad_alloc bad_weak_ptr basic_string begin bidirectional_iterator_tag binary_negate binary_search binder1st binder2nd bitset cerr char_traits checked_array_iterator checked_uninitialized_copy checked_uninitialized_fill_n cin clear codecvt common_type complex conditional const_iterator const_mem_fun_ref_t const_mem_fun_t const_mem_fun1_ref_t const_mem_fun1_t const_pointer_cast const_reference const_reverse_iterator copy copy_backward copy_if copy_n count count_if cout decay declare_no_pointers declare_reachable default_delete deque difference_type dynamic_pointer_cast empty enable_if enable_shared_from_this end equal equal_range erase exception extent fill fill_n find find_end find_first_of find_if find_if_not for_each forward_iterator_tag forward_list front front_insert_iterator front_item generate generate_n generic_container generic_iterator generic_reverse_iterator generic_value get_deleter get_pointer_safety get_temporary_buffer has_nothrow_assign has_nothrow_constructor has_nothrow_copy has_nothrow_copy_constructor has_nothrow_default_constructor has_trivial_assign has_trivial_constructor has_trivial_copy has_trivial_copy_constructor has_trivial_default_constructor has_trivial_destructor has_virtual_destructor hash_map hash_set includes initializer_list inner_product inplace_merge input_iterator_tag insert insert_iterator integral_constant iostream is_abstract is_arithmetic is_array is_base_of is_class is_compound is_const is_convertible is_empty is_enum is_floating_point is_function is_fundamental is_heap is_heap_until is_integral is_lvalue_reference is_member_function_pointer is_member_object_pointer is_member_pointer is_object is_partitioned is_pod is_pointer is_polymorphic is_reference is_rvalue_reference is_same is_scalar is_signed is_sorted is_sorted_until is_standard_layout is_union is_unsigned is_void is_volatile istream istream_iterator istreambuf_iterator iter_swap iterator iterator_traits lexicographical_compare list lower_bound make_checked_array_iterator make_heap make_shared make_signed make_unsigned map max max_element mem_fun_t mem_fun1_t merge min min_element minmax minmax_element mismatch move move_backward move_iterator multimap multiset next_permutation none_of nothrow_t nth_element ostream_iterator ostreambuf_iterator output_iterator_tag owner_less pair partial_sort partial_sort_copy partial_sum partition partition_copy partition_point pointer_safety pointer_to_binary_function pointer_to_unary_function pop_back pop_front pop_heap prev_permutation push_back push_front push_heap queue random_access_iterator_tag random_shuffle rank raw_storage_iterator rbegin reference reference_wrapper remove remove_all_extents remove_const remove_copy remove_copy_if remove_cv remove_extent remove_if remove_pointer remove_reference remove_volatile rend replace replace_copy replace_copy_if replace_if resize result_of return_temporary_buffer reverse reverse_copy reverse_iterator rotate rotate_copy search search_n set set_difference set_intersection set_new_handler set_symmetric_difference set_union shared_ptr size size_type sort sort_heap stable_partition stable_sort stack static_pointer_cast string swap swap_ranges to_array transform tuple tuple_element tuple_size type_info unary_negate unchecked_uninitialized_copy unchecked_uninitialized_fill_n undeclare_no_pointers undeclare_reachable uninitialized_copy uninitialized_copy_n uninitialized_fill uninitialized_fill_n unique unique_copy unique_ptr unordered_map unordered_multimap unordered_multiset unordered_set upper_bound value_type vector wcerr wcin wcout weak_ptr wiostream wistream"/>
                        <!-- Documentation comment keywords -->
						<Set index="2"
                            value="a addindex addtogroup anchor arg attention
                                   author b brief bug c class code date def defgroup deprecated
                                   dontinclude e em endcode endhtmlonly endif endlatexonly endlink
                                   endverbatim enum example exception f$ f[ f] file fn
                                   hideinitializer htmlinclude htmlonly if image include ingroup
                                   internal invariant interface latexonly li line link mainpage name
                                   namespace nosubgrouping note overload p page par param post pre
                                   ref relates remarks return retval sa section see showinitializer
                                   since skip skipline struct subsection test throw todo typedef
                                   union until var verbatim verbinclude version warning weakgroup
                                   $ @ \ & < > # { }"/>
				</Keywords>
				<SampleCode value="lexer_cpp.sample"
						breakpoint_line="20"
						debug_line="22"
						error_line="23"/>
                <LanguageAttributes
                    LineComment="//"
                    StreamCommentStart="/*"
                    StreamCommentEnd="*/"
                    BoxCommentStart="/* "
                    BoxCommentMid=" * "
                    BoxCommentEnd=" */"
                    CaseSensitive="1"
                    LexerCommentStyles="1,2,3,15,17,18"
                    LexerCharacterStyles="7"
                    LexerStringStyles="6,12"
                    LexerPreprocessorStyles="9"/>
		</Lexer>
</CodeBlocks_lexer_properties>
