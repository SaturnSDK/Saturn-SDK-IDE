AC_PREREQ(2.50)
AC_INIT(configure.in)
AC_CONFIG_SRCDIR([config.h.in])
AC_CONFIG_HEADER([config.h])

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(codeblocks,1.0-RC2)

AC_MSG_CHECKING(whether to enable debugging)
debug_default="no"
AC_ARG_ENABLE(debug, [  --enable-debug=[no/yes] turn on debugging (default is NO)],,
                       enable_debug=$debug_default)
if test "x$enable_debug" = "xyes"; then
         CFLAGS="$CFLAGS -g -DDEBUG"
         CXXFLAGS="$CXXFLAGS -g -DDEBUG"
	AC_MSG_RESULT(yes)
else
	CFLAGS="$CFLAGS -O2 -ffast-math"
	CXXFLAGS="$CXXFLAGS -O2 -ffast-math"
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the source formatter plugin)
astyle_default="yes"
AC_ARG_ENABLE(source-formatter, [  --enable-source-formatter build the source formatter plugin (default YES)],,
                       enable_astyle=$astyle_default)
AM_CONDITIONAL([BUILD_ASTYLE], [test "x$enable_astyle" = "xyes"])
if test "x$enable_astyle" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the class wizard plugin)
cw_default="yes"
AC_ARG_ENABLE(class-wizard, [  --enable-class-wizard build the class wizard plugin (default YES)],,
                       enable_cw=$cw_default)
AM_CONDITIONAL([BUILD_CLASSWIZARD], [test "x$enable_cw" = "xyes"])
if test "x$enable_cw" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the code completion plugin)
cc_default="yes"
AC_ARG_ENABLE(code-completion, [  --enable-code-completion build the code completion plugin (default YES)],,
                       enable_cc=$cc_default)
AM_CONDITIONAL([BUILD_CODECOMPLETION], [test "x$enable_cc" = "xyes"])
if test "x$enable_cc" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the compiler plugin)
gcc_default="yes"
AC_ARG_ENABLE(compiler, [  --enable-compiler build the compiler plugin (default YES)],,
                       enable_gcc=$gcc_default)
AM_CONDITIONAL([BUILD_COMPILER], [test "x$enable_gcc" = "xyes"])
if test "x$enable_gcc" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the debugger plugin)
dbg_default="yes"
AC_ARG_ENABLE(debugger, [  --enable-debugger build the debugger plugin (default YES)],,
                       enable_dbg=$dbg_default)
AM_CONDITIONAL([BUILD_DEBUGGER], [test "x$enable_dbg" = "xyes"])
if test "x$enable_dbg" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the default MIME handler plugin)
mime_default="yes"
AC_ARG_ENABLE(mime-handler, [  --enable-mime-handler build the default MIME handler plugin (default YES)],,
                       enable_mime=$mime_default)
AM_CONDITIONAL([BUILD_MIMEHANDLER], [test "x$enable_mime" = "xyes"])
if test "x$enable_mime" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the plugin wizard plugin)
pw_default="yes"
AC_ARG_ENABLE(plugin-wizard, [  --enable-plugin-wizard build the plugin wizard plugin (default YES)],,
                       enable_pw=$pw_default)
AM_CONDITIONAL([BUILD_PLUGINWIZARD], [test "x$enable_pw" = "xyes"])
if test "x$enable_pw" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to build the to-do plugin)
todo_default="yes"
AC_ARG_ENABLE(todo, [  --enable-todo build the to-do plugin (default YES)],,
                       enable_todo=$todo_default)
AM_CONDITIONAL([BUILD_TODO], [test "x$enable_todo" = "xyes"])
if test "x$enable_todo" = "xyes"; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_SUBST(CXXFLAGS)
AC_SUBST(CFLAGS)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_AWK
AC_PROG_LIBTOOL

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h limits.h stdlib.h string.h sys/param.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_C_VOLATILE

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([atexit getcwd isascii memchr memmove memset strcasecmp strchr strcspn strdup strrchr strstr])

dnl AM_OPTIONS_WXCONFIG
AM_PATH_WXCONFIG(2.4.2, wxWin=1)
        if test "$wxWin" != 1; then
        AC_MSG_ERROR([
                wxWidgets must be installed on your system.

                Please check that wx-config is in path, the directory
                where wxWidgets libraries are installed (returned by
                'wx-config --libs' or 'wx-config --static --libs' command)
                is in LD_LIBRARY_PATH or equivalent variable and
                wxWindows version is 2.4.2 or above.
                ])
        else
               dnl Quick hack until wx-config does it
               ac_save_LIBS=$LIBS
               ac_save_CXXFLAGS=$CXXFLAGS
               LIBS=$WX_LIBS
               CXXFLAGS=$WX_CXXFLAGS
               AC_LANG_SAVE
               AC_LANG_CPLUSPLUS
               AC_TRY_LINK([#include <wx/wx.h>],
               [wxString test=""],
               ,[WX_LIBS=$WX_LIBS_STATIC])
               AC_LANG_RESTORE
               LIBS=$ac_save_LIBS
               CXXFLAGS=$ac_save_CXXFLAGS
        fi

wx_config_minor_version=`echo $WX_VERSION | \
           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`

        if test "$wx_config_minor_version" -gt "4"; then
		WX_XRC=
	else
		WX_XRC=-l`wx-config --basename`_xrc-`wx-config --release`
	fi
AC_SUBST(WX_XRC)

dnl AM_PATH_GTK(1.2.7, ,
dnl             AC_MSG_ERROR(Cannot find GTK: Is gtk-config in path?),
dnl             gthread)

AM_CONDITIONAL([LINUX], [test `uname` = "Linux"])

AC_MSG_NOTICE([Configuring Code::Blocks...])

AC_OUTPUT([Makefile
	src/Makefile
	src/sdk/Makefile
	src/sdk/tinyxml/Makefile
	src/sdk/wxscintilla/Makefile
	src/sdk/resources/Makefile
	src/src/wxDockit/Makefile
	src/src/resources/Makefile
	src/src/Makefile
	src/plugins/Makefile
	src/plugins/astyle/Makefile
	src/plugins/astyle/resources/Makefile
	src/plugins/classwizard/Makefile
	src/plugins/classwizard/resources/Makefile
	src/plugins/codecompletion/Makefile
	src/plugins/codecompletion/resources/Makefile
	src/plugins/compilergcc/Makefile
	src/plugins/compilergcc/depslib/Makefile
	src/plugins/compilergcc/depslib/src/Makefile
	src/plugins/compilergcc/resources/Makefile
	src/plugins/debuggergdb/Makefile
	src/plugins/debuggergdb/resources/Makefile
	src/plugins/defaultmimehandler/Makefile
	src/plugins/defaultmimehandler/resources/Makefile
	src/plugins/pluginwizard/Makefile
	src/plugins/pluginwizard/resources/Makefile
	src/plugins/todo/Makefile
	src/plugins/todo/resources/Makefile
	src/tools/Makefile
	src/tools/ConsoleRunner/Makefile
	src/templates/Makefile
])
